
==================== FINAL INTERFACE ====================
2016-06-02 14:31:20.803961 UTC

interface main@main:Handlers [orphan module] 7103
  interface hash: 591318f2d261d60e5ab8a6da955a74bf
  ABI hash: f3d0d3b0ab3e7e6dacc159a9cec1e3cc
  export-list hash: 84ec957a72c13ac081dfb81aebe308ea
  orphan hash: e08ca9eb1cd19de2f69b94f30d09f585
  flag hash: 4e9d9637a8ad742a68cafd65c22d959b
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handlers.deleteDeleteFuncionarioR
  Handlers.deleteDeleteHistoricoVagaValorR
  Handlers.deleteDeleteR
  Handlers.deleteDeleteVagaR
  Handlers.deleteDeleteVagaValorR
  Handlers.deleteTipoVeiDeleteR
  Handlers.deleteVeiDeleteR
  Handlers.getClientR
  Handlers.getContratoR
  Handlers.getFuncionarioR
  Handlers.getHistoricoVagaValorR
  Handlers.getListaFuncionarioR
  Handlers.getListaR
  Handlers.getListaTpVeiculoR
  Handlers.getListaVagaR
  Handlers.getListaVagaValorR
  Handlers.getListaVeiculoR
  Handlers.getTipoVeiculoR
  Handlers.getVagaR
  Handlers.getVagaValorR
  Handlers.getVeiculoR
  Handlers.postAvulsoR
  Handlers.postClientR
  Handlers.postContratoR
  Handlers.postConveniadoR
  Handlers.postEventoR
  Handlers.postFuncionarioR
  Handlers.postHistoricoVagaValorR
  Handlers.postTipoVeiculoR
  Handlers.postVagaR
  Handlers.postVagaValorR
  Handlers.postVeiculoR
  Handlers.putTipoVeiUpdateR
  Handlers.putUpdateFuncionarioR
  Handlers.putUpdateR
  Handlers.putUpdateVagaR
  Handlers.putUpdateVagaValorR
  Handlers.putVeiUpdateR
module dependencies: Foundation Import
package dependencies: aeson-compat-0.3.3.0@aeson_0xjzVmng3iDFSqREKtljlA
                      aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3
                      auto-update-0.1.4@autou_Fnqbq5K41573zil7J3s62I base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.1@basec_3Zy8UsyHmBEEwbReR8x1KT
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-html-0.8.1.1@blaze_1fCoF4onMJE2jDLBViwynk
                      blaze-builder-0.4.0.2@blaze_5LQurmvTy7l9rPlWgPlNE4
                      blaze-markup-0.7.0.3@blaze_JGtgJgx8yqB3DdKuU3sbgD
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_8joO9kPGMysIcGsv22FmhM
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      clientsession-0.9.1.1@clien_5voyFsgo1EG4Zcy2KTreld
                      conduit-extra-1.1.13.1@condu_1LMl3SW4LtrHkXhIuAcim5
                      conduit-1.2.6.6@condu_JdeDIbfFlF2LFouNeugyxh
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      cookie-0.4.2@cooki_HgYmE0LnTLQI3ZHrNmxIUf
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      crypto-api-0.13.2@crypt_2BEYKdRP8nrKGHynW1FWqA
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      css-text-0.1.2.1@csste_DCmJgQlbndx5J1dp3gjSY0
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_852PUaAoFuMCJCuSp1iWYg
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.6@fastl_KNzHEmV4CAC3sAdPGCavvx
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      http2-1.4.5@http2_DoxR3dWy5TOCdpHywL3J3q
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-date-0.0.6.1@httpd_5DCnWjYhsQa9SYTqbDecLX
                      http-types-0.9@httpt_GVuxyBdW2yt88cWrjZfRWC integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-logger-0.3.18@monad_4zFmsKEb02q80NkYIgzdSA
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-uri-2.6.1.0@netwo_8hCRgBDYvZA6nRJCSPBXws
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      persistent-template-2.1.8.1@persi_1tD6A5SgofA9bCUT3OrmYW
                      persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h
                      persistent-postgresql-2.2.2@persi_I35172shMYp78kjIUv4icT
                      postgresql-libpq-0.9.1.1@postg_6f9D1As2FCe0fjZpXXvHvS
                      postgresql-simple-0.5.1.3@postg_9hhNYLG1RxhIG50wjKKMiI
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      psqueues-0.2.2.1@psque_AvLcbKUIB1yCm8wZoS0YR7
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      resourcet-1.1.7.4@resou_HqDlSpmGRphG5PMbskXVNU
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0
                      shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.23@simpl_4cgd7qT6IWhK1oBB4nw9KS
                      skein-1.0.9.4@skein_Er8QdQfWtp79PgFByyaiMF
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.5@strea_EmmPiWycOZRDBDTh9xaABj
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      tagsoup-0.13.10@tagso_3rEkgaaJ74Z8iYKiJ2gVLz
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.1@wai_0sX35KG3ls0DbfkAiL2KUt
                      wai-extra-3.0.15.1@waiex_EWHXUlMsXiT8I0K03tLj8q
                      wai-logger-2.2.7@wailo_1X00Br1oGNaGIwtKEg2Oq9
                      warp-3.2.2@warp_BFfPE5siJYR7AwyKWfQUnI
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      xss-sanitize-0.3.5.7@xsssa_AUbijHu4zP0D8gM2KdDi0S
                      yesod-persistent-1.4.0.5@yesod_3pJn032f2j34oA1FGRgBps
                      yesod-form-1.4.7.1@yesod_5qqGWLvJ7hT5L1p57VmswX
                      yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK
                      yesod-1.4.3@yesod_FpHh22gomk01kN3v1wP7Ls
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-compat-0.3.3.0@aeson_0xjzVmng3iDFSqREKtljlA:Data.Aeson.Compat
         aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Instances
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_2BEYKdRP8nrKGHynW1FWqA:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-template-2.1.8.1@persi_1tD6A5SgofA9bCUT3OrmYW:Database.Persist.TH
         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Sql.Orphan.PersistUnique
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_852PUaAoFuMCJCuSp1iWYg:Text.Email.Parser
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         main@main:Foundation
                         monad-logger-0.3.18@monad_4zFmsKEb02q80NkYIgzdSA:Control.Monad.Logger
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         network-uri-2.6.1.0@netwo_8hCRgBDYvZA6nRJCSPBXws:Network.URI
                         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Sql.Orphan.PersistStore
                         persistent-postgresql-2.2.2@persi_I35172shMYp78kjIUv4icT:Database.Persist.Postgresql
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.4@resou_HqDlSpmGRphG5PMbskXVNU:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.List.NonEmpty
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.Semigroup
                         shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4:Text.Css
                         shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4:Text.Shakespeare
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Class.Handler
                         yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Types
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Class b6061569d1ac2b8df81c6ec7ca9cdafa
import  -/  aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Instances 22388f4dcc0a7465444ae51559542a7e
import  -/  aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Internal 532cd4996965e5bb04b875eb94accd47
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  blaze-html-0.8.1.1@blaze_1fCoF4onMJE2jDLBViwynk:Text.Blaze.Html dcd84e6a1095a3bbd6a32bcf6f207e70
import  -/  blaze-markup-0.7.0.3@blaze_JGtgJgx8yqB3DdKuU3sbgD:Text.Blaze.Internal 695ee1760d4a7ba45b41439e146f60cb
import  -/  Foundation 6e37160348ba142c9b2c5ce46e9e7742
  exports: b0b53ccff8d676cb7d945ce5c8917c55
  Avulso 22f4c920a1f37b3c09b63a19c2a92045
  AvulsoR 366bb1acccc2a3dbddbba596b27229cc
  Client 9b1ae832c1c52352d91cd25ffeebfe25
  ClientBairro b4510e657636f76a9310507f572237cc
  ClientCep 86c5d131903980a939e085cd2a56117b
  ClientCidade dcbd310453c1e9cb27e355bb5cf12ce9
  ClientCnpj c3b6811fe71037bc93fd7a869be35c47
  ClientCpf 93c4b1595a0dd059d3f41aab618eb6d4
  ClientEstado ec8fac4332257966417abefda8e7999f
  ClientFlcliente 5b301461719ae5dbb39b50c9eb6fe412
  ClientId fbc30bcbede087989b1573c902f10de6
  ClientLogradouro f813b0693ace04c816da488d4c7034f8
  ClientNome 3fdd831e26f41b372dd74db751946225
  ClientR 726c0701363396d7c141d21edd9c0435
  ClientRazaosocial 5a3d105d57028ae2ff8ec5942d155363
  ClientRg 38796f5ed564f982c8a840f27be9d9bb
  ClientSexo db37b4afb969e39a13ac40dcac3ce211
  ClientTelefone 32f62fe1ae0bfef446d9b66e5736c0fb
  Contrato cb53ebf1be65fece652ea6e5050241ba
  ContratoR d9af9898277e6a2df97408b3da758839
  Conveniado dacbfd9c1cb333348fc861306a293979
  ConveniadoR cd4e027add77d29a23eaf67287eeedbf
  DeleteFuncionarioR b4a4cbc56e5b234769d4358fda6d3686
  DeleteHistoricoVagaValorR a01ce51a35c0fa074d1b60346d02c62e
  DeleteR 4bc956219a69837839dfedbd9ce990c7
  DeleteVagaR 32fe5f404a8c986fc2dfadd084479e1b
  DeleteVagaValorR ce8c9d6874d001e4a7c736282db1e530
  Evento 3636c86ae0ea3de15a97043477c79d6b
  EventoR b37a42ebdc40628fdb21782419d18038
  Funcionario 64b0d7db1874ce2863f48a2b930d1d2d
  FuncionarioAtivo 3308740c3fc5d5c6f1d222072efa8222
  FuncionarioId 4fc4ccf761a5bc48993fcede182ebffd
  FuncionarioId b4504aa85e5fdbcc60c5b70fa8c739ac
  FuncionarioR a083f7ab37f7b0b13cddb9c2cbc2140f
  FuncionarioSenha 5b607c29db9f54473ec43c308ff371be
  Handler d87301abb6b7f1151330f8a8768061d0
  HistoricoVagaValor bc28ca05711fdc101a0c53a16357f293
  HistoricoVagaValorId a9750c52d9ab1023477ca1fc93475e22
  HistoricoVagaValorId 68f863f2c8fea33eabcf1149498a51c2
  HistoricoVagaValorR 13e489b01f3bee647e3e824e3972977d
  ListaFuncionarioR 23638367b238ee13ee245fb146141c3d
  ListaR 223c47f10eaf2cd6b3a38b5f1bb81c2c
  ListaTpVeiculoR 7f7a29febd8b2f83a7cd93c55ceb0335
  ListaVagaR 9186c9b0503562e54b43f439f75e5e1b
  ListaVagaValorR e6e9a7c96a879f43a1a2773133776785
  ListaVeiculoR 30effe677b73a97ef3f8c3b115f2d51c
  Sitio d3145e345db4cc9cdfcd124f170f826e
  TipoVeiDeleteR 2e1e817e04459e2c672a36e71a055b75
  TipoVeiUpdateR a5ec0577c9d1e6e669f22a0856a6c328
  TipoVeiculo e56538bcd824a5f7e3b701e15aac03b7
  TipoVeiculoId 24ef3d7730978c5a455611ee59a9f270
  TipoVeiculoNome 48ac5c5fe8a3c14c4e15dcc4c4752b25
  TipoVeiculoR 092ca77a03460cc7fd20c357d83478f7
  UpdateFuncionarioR 34a52f0ecceab48209dc4c2668b98aab
  UpdateR 31180d4a1f40b062bd38cca876c1a710
  UpdateVagaR b7a56bf04569344d64e8857544f70e64
  UpdateVagaValorR 0aa763656d6d174f02704aa06ac25f0e
  Vaga cd8972120d0e2f1ecc84b75e0af09dcb
  VagaDiurno 57685a069f835eafffdb0c33bd5644e2
  VagaId 6c2400f882430a36129d70e156731431
  VagaId df7a3f54e16f323cf18172509ea335d9
  VagaNoturno 82f2f91f6941b297308fa279f04d83fc
  VagaR e628a08990a7ab27242f00132ac9d28f
  VagaVagavalorid ec15a1c347eb77333538d40213c1d83b
  VagaValor 5046a97f4c64ef0928f9f4ddc5b70401
  VagaValorFuncionarioid 544ecbedc3c8b3aa597c427760d0b4d9
  VagaValorId 92b2e49809cb4bd6d0a6f68c1d9d0129
  VagaValorId 6bb94de3129ce57ae7e07b92352ad76a
  VagaValorR db52547fea43fd476043031700d1fc02
  VagaValorValordiurno 878e12ed8884310d985ef39615b05e24
  VagaValorValornoturno 3d404c56c09412888f961738e8e5e041
  VeiDeleteR 3bca4a715088e1a5c8e710dcaf590ca0
  VeiUpdateR 46423915196d103db3a92a363bc71c3b
  Veiculo ce697d033a62e92dac4b666432340c05
  VeiculoAno cb5327d8edb6c98b8f30be79149a5720
  VeiculoClienteid f996de61523b9812232d3a8b7c138d50
  VeiculoCor 24919481c1905da5720995c94fbcecfb
  VeiculoDescricao 1f40cf28de54217a8cffc0506920b949
  VeiculoId cd323175d194701b3a3f5af20a49699d
  VeiculoId c43e0aef6497f2a87f0e855ce308906f
  VeiculoMarca e5adc45b427744b616e2a8bd0b44e052
  VeiculoPlaca f19f61ab420795e0e488d971134c5dcb
  VeiculoR 9e6f82f96a1de1f9e623aaafc612960f
  VeiculoTipoveiculoid dfc2762e93fb65dc4f548c586af9b47b
  clientBairro a9fffdb3098d21c975f39e254937de4c
  clientCep f0bfeed4b5047de877b19c6350a6f82e
  clientCidade d6b9f209b3d00f0ea97ed42876314fa8
  clientCnpj a103d0ee0fa86c2ba8a4463ca4e3c65c
  clientCpf 7c4a738e6fdd4f7660dce511b3cb98fe
  clientEstado 258c49bb777d007cea2dafe5d375c35c
  clientFlcliente 83a2a00a6f215b6cfb6f153a39a414eb
  clientLogradouro eb560460aee652f4f8cea5609e5d3239
  clientNome d5489c2287fc5a389325ea9d3446f059
  clientRazaosocial 2a59e9ca4e0b094adacc8d5332b68749
  clientRg dc4b05df06c8e7f94b9c33441d8d2107
  clientSexo 2670620df2227e52cb1cb97ab516b62e
  clientTelefone 6713b6fcc340f275924eb1e8af9d2c1f
  funcionarioAtivo 6271282578300e41116d058ec7a83429
  funcionarioSenha 2d693d9aae5de82d19c360e5d1ea7b27
  tipoVeiculoNome d5c5c3e9affc07c878c5722d8cbc1bcc
  vagaDiurno 3673977533ad9ce7f4e8a1594e4c2348
  vagaNoturno be7d18759a6b7e812b94e1749ad59d7a
  vagaVagavalorid 0cf5218f4f0aa79564295e7f74a5972d
  vagaValorFuncionarioid ed1d35ba1e96c95a88853358df940c3e
  vagaValorValordiurno 5073f9481d5327f17752866393a2f3dc
  vagaValorValornoturno 337f9fe0096233e1996fc3b65175a96c
  veiculoAno 0836f510a5095f1eec3f9d6e1a171d25
  veiculoClienteid 27060529adf7014126b43e20eae09d1f
  veiculoCor 2ab53b85d8f0367f1c35cafea150bc2a
  veiculoDescricao a8fb27b064508519005997b78a05f02b
  veiculoMarca 9322aef18355cd99803bb95b86cfe107
  veiculoPlaca 0fb76d95b6d992913527cfd853aa31f1
  veiculoTipoveiculoid 06eec435e730086f81de228e7cecf286
import  -/  Import 0fd771d012bc0aa50d654014c3e02266
  exports: 3f81b358abbdd755233af520aa5259f2
  pRoutes 82fa7546f65caed880e973c88aaca639
import  -/  monad-logger-0.3.18@monad_4zFmsKEb02q80NkYIgzdSA:Control.Monad.Logger 182fd28eab575faa0f8bc2038857c61b
import  -/  path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO:Web.PathPieces e7a246921fcfef213af85b6de92fc54c
import  -/  persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist 4dcbda9cd85f7cdb49213c127f5f47e9
import  -/  persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Class.PersistEntity 9b498f62468214b5ccb2c732d79401f1
import  -/  persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Class.PersistQuery 383e5f0b635beadc9b9d03d3bb9bb054
import  -/  persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Class.PersistStore 6f0b5a2a3e5a383bcd0d5e29740fa25c
import  -/  persistent-postgresql-2.2.2@persi_I35172shMYp78kjIUv4icT:Database.Persist.Postgresql 6d931a7480e1dc213a4f93417db9666f
import  -/  shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4:Text.Css 195d9e4340cbc9283be83c3d457203a8
import  -/  shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4:Text.Julius 187e1ae0e95ed760a6f17dd0379800bf
import  -/  shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4:Text.Shakespeare ead7533eec1e30591b44ca2899e94800
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal.Builder 170f5b8dea07ecaecbb885355cadaca7
import  -/  wai-3.2.1@wai_0sX35KG3ls0DbfkAiL2KUt:Network.Wai.Internal f1a685b41c2884d9d2779e47213c3c44
import  -/  yesod-persistent-1.4.0.5@yesod_3pJn032f2j34oA1FGRgBps:Yesod.Persist.Core 33c6498013eb921166be4018199adcf7
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Class.Dispatch c1207f87922eeecef68ba7abad801908
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Class.Yesod 1c744b066587cb8f7874ba07bae90fd4
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Handler fac0e317c98d2b63fb769a5a2c15d3f5
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Internal.Run 7f2700d3fad159393f3cd5d14c7a5f40
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Internal.TH 3865f83822d454959baf81477309f335
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Json 350f8d4ac84e23aa9dac397ce5e3f87c
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Widget fa3a2d463e15459dc3a1bbc6cb38a71f
import  -/  yesod-1.4.3@yesod_FpHh22gomk01kN3v1wP7Ls:Yesod 318d44ba081746b664dcf909b019ac81
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-7.10.3/lib/ghc-7.10.3/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
ca0296fe518fee7279623ea4905531d9
  $fYesodDispatchSitio ::
    Yesod.Core.Class.Dispatch.YesodDispatch Foundation.Sitio
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Sitio
                  Foundation.$fYesodSitio
                  Handlers.$fYesodDispatchSitio_$cyesodDispatch -}
245e24b0af38b62b3a5e82fd6880e4fa
  $fYesodDispatchSitio_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Sitio
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Yesod.Core.Types.YesodRunnerEnv Foundation.Sitio
                   w1 :: Network.Wai.Internal.Request ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Handlers.$w$cyesodDispatch
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
378293e866b01fea00f1c49d56932707
  $s$fApplicativeWidgetT ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fApplicativeWidgetT1
                  Handlers.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
                  (Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fApplicativeWidgetT1
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* -}
d99c1c51c841c9693d158197ded41899
  $s$fApplicativeWidgetT1 ::
    GHC.Base.Functor
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Form.Fields.$s$fFunctorWidgetT @ Foundation.Sitio) -}
6237d23b053861f50839c9d510b24878
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*> ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a49
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a49
                   eta1 :: Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ b
                   (Yesod.Form.Fields.$s$fFunctorWidgetT_$s$fFunctorWidgetT_$c<$
                      @ Foundation.Sitio
                      @ (b -> b)
                      @ a49
                      (GHC.Base.id @ b)
                      eta)
                   eta1) -}
3b8c6aa8a976869ea9a2b941031ed864
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a49
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a49
                   eta1 :: Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ a49
                   (Yesod.Core.Types.$fFunctorWidgetT_$cfmap
                      @ Foundation.Sitio
                      @ GHC.Types.IO
                      GHC.Base.$fMonadIO
                      @ a49
                      @ (b -> a49)
                      (GHC.Base.const @ a49 @ b)
                      eta)
                   eta1) -}
1873d2a164966fcb6423cdaedb1efaac
  $s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn ::
    a -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a49
                   a50 :: a49
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO
                    @ (a49,
                       Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route Foundation.Sitio))
                    (a50,
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.Sitio)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(a49,
                        Yesod.Core.Types.GWData
                          (Yesod.Routes.Class.Route Foundation.Sitio))>_R)
                   eta1)
                  `cast`
                (forall a49.
                 <a49>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(a49,
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route Foundation.Sitio))>_R))
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <a49>_N))) -}
94408d091aa50715adc63b0092eeca17
  $s$fMonadBasebWidgetT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Handlers.$s$fMonadBasebWidgetT3
                  GHC.Base.$fMonadIO
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadBasebWidgetT_$cliftBase
                     @ GHC.Types.IO
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Base.$fMonadBaseIOIO) -}
74c1836837e42d36525fa162063f85f1
  $s$fMonadBasebWidgetT1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT -}
77e429217cc2b5a5354565f29d716e8d
  $s$fMonadBasebWidgetT2 ::
    GHC.Base.String
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a49 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a49)
                   eta) -}
9c93d4e766283b68bac7988c063086a1
  $s$fMonadBasebWidgetT3 ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fApplicativeWidgetT -}
7678f165c180d2f7a4038df270b75038
  $s$fMonadBasebWidgetT_$s$fMonadWidgetT ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT3
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>=
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
                  Handlers.$s$fMonadBasebWidgetT2 -}
7abcfebccd0d8bba78aec98b7fca23d3
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT2
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT2
                     Handlers.$s$fMonadHandlerWidgetT1) -}
31771c4cf2b9f94810519de9f1761c72
  $s$fMonadHandlerWidgetT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
e2f0247ec9b182876500b59a15e492e0
  $s$fMonadHandlerWidgetT2 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT -}
0b8dc4e9a3ce83051021ff01c47a0433
  $s$fMonadHandlerWidgetT3 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT -}
7ee7a4883d687b3c2488ad11c1d731e9
  $s$fMonadHandlerWidgetT4 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT -}
7a3ee225cabe8a6180721d134389cea9
  $s$fMonadHandlerWidgetT5 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT -}
09a4faa1a24c9c1409386b02a3cfd6c6
  $s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadIOWidgetT_$cliftIO
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.IO.Class.$fMonadIOIO) -}
20e655635cd606a1a2de982490d08aaa
  $s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT5
                  Handlers.$s$fMonadHandlerWidgetT4
                  Handlers.$s$fMonadBasebWidgetT3
                  Handlers.$s$fMonadHandlerWidgetT3
                  (Yesod.Core.Types.$fMonadResourceWidgetT_$cliftResourceT
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT5
                     Handlers.$s$fMonadHandlerWidgetT4
                     Handlers.$s$fMonadBasebWidgetT3
                     Handlers.$s$fMonadHandlerWidgetT3
                     GHC.Base.$fApplicativeIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
8814621dee76038db74ff49ca3865d13
  $s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadThrowWidgetT_$cthrowM
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Catch.$fMonadThrowIO) -}
f7eb39dcc854ffe23477de4746713b1f
  $s$fMonadWidgetWidgetT ::
    Yesod.Core.Class.Handler.MonadWidget
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadWidgetWidgetT1
                  (Yesod.Core.Class.Handler.$fMonadWidgetWidgetT_$cliftWidgetT
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadWidgetWidgetT1
                     Handlers.$s$fMonadHandlerWidgetT1) -}
45e4c6af9ed80036255ecea188e0c6a1
  $s$fMonadWidgetWidgetT1 ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT -}
3c9dafcf2b41793510d408a41b4f9602
  $s.=_$spoly_a ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
         Data.Aeson.Types.Internal.Value
    -> (Data.Vector.Mutable.MVector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Data.Aeson.Types.Internal.Value
        ~R# Data.Vector.Generic.Base.Mutable
              Data.Vector.Vector
              (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
              Data.Aeson.Types.Internal.Value)
    -> GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U><L,U> -}
8bafeef61c15153e1af1be857e68c95f
  $stoWidget3 ::
    Yesod.Core.Types.RY Foundation.Sitio
    ~ Yesod.Core.Types.RY Foundation.Sitio
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Yesod.Core.Types.RY Foundation.Sitio)
                   @ (Yesod.Core.Types.RY Foundation.Sitio)
                   @~ <Yesod.Core.Types.RY Foundation.Sitio>_N) -}
08757187ca725358c783507eab7c7783
  $w$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Sitio
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Version.HttpVersion
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.Bool
    -> Network.Socket.Types.SockAddr
    -> [Data.Text.Internal.Text]
    -> Network.HTTP.Types.URI.Query
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> Data.Vault.Lazy.Vault
    -> Network.Wai.Internal.RequestBodyLength
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 17,
     Strictness: <L,U(U,U,U,U,C(U(U,1*U(U,U,U))))><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
563704e673bc3604e63282d04a57be86
  $wa ::
    [Data.Aeson.Types.Internal.Value]
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Data.Aeson.Types.Internal.Value] ->
                 case GHC.ST.runSTRep
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                0
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case Handlers.$s.=_$spoly_a
                                @ s
                                0
                                0
                                ipv1
                                @~ (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                       (GHC.ST.ST
                                                                                          s)>_N <Data.Aeson.Types.Internal.Value>_N)
                                0
                                (GHC.Base.map
                                   @ Data.Aeson.Types.Internal.Value
                                   @ Data.Aeson.Types.Internal.Value
                                   Data.Aeson.Types.Instances.$fToJSONValue_$ctoJSON
                                   w)
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                            (GHC.ST.ST
                                                                               s)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of dt { Data.Vector.Vector ipv ipv1 ipv2 ->
                 (# dt #) }) -}
8e02dd54f15b4614b148858900b3fdec
  deleteDeleteFuncionarioR ::
    Foundation.FuncionarioId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.deleteDeleteFuncionarioR1
                  `cast`
                (<Foundation.FuncionarioId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
e644d6369678ca5710979a70f9031f64
  deleteDeleteFuncionarioR1 ::
    Foundation.FuncionarioId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ fid :: Foundation.FuncionarioId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cdelete
                              @ Foundation.Funcionario
                              @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                              Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                              Foundation.$fPersistEntityFuncionario
                              fid))
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.deleteDeleteFuncionarioR2
                   ipv2 } }) -}
4fd3bf715c8645da6fd1579ede2bc0ad
  deleteDeleteFuncionarioR10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "resp"#) -}
bfa5fb3914664ca11089670e6586ecde
  deleteDeleteFuncionarioR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Handlers.deleteDeleteFuncionarioR3) -}
799ad6eefc77e45ab9d0b676cf3fc94f
  deleteDeleteFuncionarioR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status200
                   Handlers.deleteDeleteFuncionarioR4 }) -}
28e2bb784a0ad350f0386ab48a1d8113
  deleteDeleteFuncionarioR4 :: Yesod.Core.Types.TypedContent
  {- Unfolding: (Yesod.Core.Types.TypedContent
                   Yesod.Core.Content.typeJson
                   Handlers.deleteDeleteFuncionarioR5) -}
fbfd82def33990f8bb7fce7cb40cff21
  deleteDeleteFuncionarioR5 :: Yesod.Core.Types.Content
  {- Unfolding: (Yesod.Core.Types.ContentBuilder
                   Handlers.deleteDeleteFuncionarioR6
                     `cast`
                   (Trans
                        (forall r.
                         <Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                        (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
66660ef63eb93e87d8055b6e466f9f90
  deleteDeleteFuncionarioR6 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (\ @ r
                   w1 :: Data.ByteString.Builder.Internal.BufferRange
                         -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                   w2 :: Data.ByteString.Builder.Internal.BufferRange
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Yesod.Core.Content.$fToTypedContentValue2
                   @ r
                   Handlers.deleteDeleteFuncionarioR_w
                   w1
                   ww1
                   ww2
                   w3 }) -}
8346a08a850b3544d75892a16fff8af4
  deleteDeleteFuncionarioR7 :: [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   Handlers.deleteDeleteFuncionarioR8
                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)) -}
672802fefd594cbdbcc3a7f41ee2a72e
  deleteDeleteFuncionarioR8 ::
    (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
  {- Unfolding: ((Handlers.deleteDeleteFuncionarioR10,
                  Handlers.deleteDeleteFuncionarioR9)) -}
6b6530a66eb21545edcee0a3aeae31de
  deleteDeleteFuncionarioR9 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "DELETED"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
d817243b600505402296eb7de20fe352
  deleteDeleteFuncionarioR_w :: [GHC.Types.Char]
  {- Unfolding: (case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        Handlers.deleteDeleteFuncionarioR7
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 case Data.Text.Internal.Builder.$wtoLazyTextWith
                        112
                        (Data.Aeson.Encode.encodeToTextBuilder
                           (Data.Aeson.Types.Internal.Object dt)) of dt1 { DEFAULT ->
                 Yesod.Core.Content.$wunfold dt1 0 } }) -}
6b00531f9c7f981074b3c134669762f9
  deleteDeleteHistoricoVagaValorR ::
    Foundation.HistoricoVagaValorId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.deleteDeleteHistoricoVagaValorR1
                  `cast`
                (<Foundation.HistoricoVagaValorId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
996fc8b9c41df7a58795fe4225ec2dc7
  deleteDeleteHistoricoVagaValorR1 ::
    Foundation.HistoricoVagaValorId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ hvvid :: Foundation.HistoricoVagaValorId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cdelete
                              @ Foundation.HistoricoVagaValor
                              @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                              Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                              Foundation.$fPersistEntityHistoricoVagaValor
                              hvvid))
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.deleteDeleteFuncionarioR2
                   ipv2 } }) -}
c64373decd7397cfc1703c72f31ad34c
  deleteDeleteR :: Foundation.ClientId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.deleteDeleteR1
                  `cast`
                (<Foundation.ClientId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
c7ff0e885cd5f1b65a5d228a322aaa76
  deleteDeleteR1 ::
    Foundation.ClientId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ pid :: Foundation.ClientId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cdelete
                              @ Foundation.Client
                              @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                              Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                              Foundation.$fPersistEntityClient
                              pid))
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.deleteDeleteFuncionarioR2
                   ipv2 } }) -}
4313ee3e80178a67837ae2dde00e3a01
  deleteDeleteVagaR :: Foundation.VagaId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.deleteDeleteVagaR1
                  `cast`
                (<Foundation.VagaId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
00bdd568825ad6f6ec75afa500e47538
  deleteDeleteVagaR1 ::
    Foundation.VagaId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ vaid :: Foundation.VagaId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cdelete
                              @ Foundation.Vaga
                              @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                              Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                              Foundation.$fPersistEntityVaga
                              vaid))
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.deleteDeleteFuncionarioR2
                   ipv2 } }) -}
7b863e0cf0ce9088e95d9cf13ed54540
  deleteDeleteVagaValorR ::
    Foundation.VagaValorId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.deleteDeleteVagaValorR1
                  `cast`
                (<Foundation.VagaValorId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
2ff38cc6c914b90db2e9321b85f18555
  deleteDeleteVagaValorR1 ::
    Foundation.VagaValorId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ vavaid :: Foundation.VagaValorId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cdelete
                              @ Foundation.VagaValor
                              @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                              Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                              Foundation.$fPersistEntityVagaValor
                              vavaid))
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.deleteDeleteFuncionarioR2
                   ipv2 } }) -}
788deb1cdf63a7c1fa4aa9011027b759
  deleteTipoVeiDeleteR ::
    Foundation.TipoVeiculoId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.deleteTipoVeiDeleteR1
                  `cast`
                (<Foundation.TipoVeiculoId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
e467fb3d758afe549bde739fc619c614
  deleteTipoVeiDeleteR1 ::
    Foundation.TipoVeiculoId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ tvid :: Foundation.TipoVeiculoId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cdelete
                              @ Foundation.TipoVeiculo
                              @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                              Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                              Foundation.$fPersistEntityTipoVeiculo
                              tvid))
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.deleteDeleteFuncionarioR2
                   ipv2 } }) -}
2f9e304125834e1371ea2f777c71f7b5
  deleteVeiDeleteR :: Foundation.VeiculoId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.deleteVeiDeleteR1
                  `cast`
                (<Foundation.VeiculoId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
c43558baee100dc30120d057be08f58d
  deleteVeiDeleteR1 ::
    Foundation.VeiculoId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ vid :: Foundation.VeiculoId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Database.Persist.Sql.Orphan.PersistStore.$w$cdelete
                              @ Foundation.Veiculo
                              @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                              Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                              Foundation.$fPersistEntityVeiculo
                              vid))
                        eta
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.deleteDeleteFuncionarioR2
                   ipv2 } }) -}
a8bf680417a9fc98150441e07a0c58f4
  getClientR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getClientR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
82f87fa5f4d4427db528cb74728980ef
  getClientR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getClientR93
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getClientR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
79be62b5fbb4af798cdca73d7af81824
  getClientR10 :: [Text.Css.TopLevel Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.TopLevel Text.Css.Resolved)
                   Handlers.getClientR28
                   Handlers.getClientR11) -}
b37ed7f415b09fb6eb75d45eb1a1def2
  getClientR11 :: [Text.Css.TopLevel Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.TopLevel Text.Css.Resolved)
                   Handlers.getClientR12
                   (GHC.Types.[] @ (Text.Css.TopLevel Text.Css.Resolved))) -}
88ae2602be05cd47dace73237e2dfb4c
  getClientR12 :: Text.Css.TopLevel Text.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Css.TopBlock
                   @ Text.Css.Resolved
                   Handlers.getClientR13) -}
cb7cc430947d0aa1327b8915ca9d7fa0
  getClientR13 :: Text.Css.Block Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Block
                   @ Text.Css.Resolved
                   Handlers.getClientR26
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:SelectorResolved[0])))))
                   Handlers.getClientR14
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:MixinsResolved[0])))) -}
dd8b2255eb601a4eb159e67f03a85e2b
  getClientR14 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getClientR21
                   Handlers.getClientR15) -}
962944bbb02f63c084fa557597d87a39
  getClientR15 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getClientR16
                   (GHC.Types.[] @ (Text.Css.Attr Text.Css.Resolved))) -}
48337a9794df938afefb6ef517596e45
  getClientR16 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getClientR19
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getClientR17
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
33dc69fd4f4d0fec3c2eaf9bccf7725a
  getClientR17 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR18)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
88bd52252d531cd1a40acfdbac342869
  getClientR18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "#ddd"#) -}
f306cde26454b8e15c86e921ce1ac3f3
  getClientR19 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR20)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
71e84063514a9fe03ddb591b11d0e8c0
  getClientR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getClientR86
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getClientR3
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
39d29eb550a529cc91d0f55b86e7024d
  getClientR20 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "--background-color"#) -}
11f1bed1acab30b111b0d4e124201d14
  getClientR21 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getClientR24
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getClientR22
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
41f9c974dfca7fdb4bb4a3bfd59536b4
  getClientR22 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR23)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
1ed667b192558e6f7dfeab24bbd168fa
  getClientR23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "2% 2% 2% 2%"#) -}
547a74e16d51a0c0e0cd98b5db6b2713
  getClientR24 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR25)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
4483af747adee636953b594d3ce7c4dc
  getClientR25 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "padding"#) -}
03ecfb1cceefeeeddbab14714096020d
  getClientR26 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR27)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
8e329cab0a8a9f1d8724b562d6857b7e
  getClientR27 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "#formulario"#) -}
2f51bec01bc2229fb39a6c04cc929012
  getClientR28 :: Text.Css.TopLevel Text.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Css.TopBlock
                   @ Text.Css.Resolved
                   Handlers.getClientR29) -}
d903876b0784788d94a30286a2b0b0dd
  getClientR29 :: Text.Css.Block Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Block
                   @ Text.Css.Resolved
                   Handlers.getClientR40
                     `cast`
                   (Trans
                        (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                        (Sub (Sym (Text.Css.TFCo:R:SelectorResolved[0]))))
                   Handlers.getClientR30
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:MixinsResolved[0])))) -}
cc2c0e45d9be3049ccb1aa2b84363caf
  getClientR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getClientR79
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getClientR4
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
88b0f04b3c17f89ade71a65352d1be6e
  getClientR30 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getClientR35
                   Handlers.getClientR31) -}
9274f3e6f96960792e18748440048957
  getClientR31 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getClientR32
                   (GHC.Types.[] @ (Text.Css.Attr Text.Css.Resolved))) -}
d84c467c91be68f4ffd76e3de049dac6
  getClientR32 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getClientR24
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getClientR33
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
5befdc2355297c918e9b8beac3d448b1
  getClientR33 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR34)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
29c0c9e51070129f79679a4a5eab2b93
  getClientR34 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "1% 1% 1% 1%"#) -}
8be9d9f2f2285fba0d642ec2507ec53b
  getClientR35 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getClientR38
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getClientR36
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
23cc14d54576e039a2206c01e0027640
  getClientR36 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR37)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
dc957f46581f78f76f4472567d5a4388
  getClientR37 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "2% auto"#) -}
977b0aee67ef203f0a7cac51c5d85bda
  getClientR38 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR39)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
4a947b15fe4a4838533a2caeeebb4f3e
  getClientR39 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "margin"#) -}
4a000e347e0241a7552810e27e4a624f
  getClientR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getClientR75
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getClientR5
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
4342475a4116129a9900feeed1724b8e
  getClientR40 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1,
     Unfolding: (Handlers.getClientR53 Handlers.getClientR41) -}
6ec7f1b85bb620b33798ac593bbd9922
  getClientR41 :: [Data.Text.Internal.Builder.Builder]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Builder.Builder
                   Handlers.getClientR51
                   Handlers.getClientR42) -}
72fa1a30a56178bda72968d1df71e6af
  getClientR42 :: [Data.Text.Internal.Builder.Builder]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Builder.Builder
                   Handlers.getClientR48
                   Handlers.getClientR43) -}
8fe92f10161e27eeb0f2905af1442f10
  getClientR43 :: [Data.Text.Internal.Builder.Builder]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Builder.Builder
                   Handlers.getClientR50
                   Handlers.getClientR44) -}
3dda34d267a48dccf1ca8ad0849426f8
  getClientR44 :: [Data.Text.Internal.Builder.Builder]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Builder.Builder
                   Handlers.getClientR48
                   Handlers.getClientR45) -}
bc10a48671f4aa76687ee36e36d5edcb
  getClientR45 :: [Data.Text.Internal.Builder.Builder]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Builder.Builder
                   Handlers.getClientR46
                   (GHC.Types.[] @ Data.Text.Internal.Builder.Builder)) -}
b301f5d1168fbc072635c12de6d2b31a
  getClientR46 :: Data.Text.Internal.Builder.Builder
  {- Arity: 3,
     Unfolding: (Text.Css.fromText Handlers.getClientR47) -}
1289159e0da5729fad73f06f27180219
  getClientR47 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "#tabela"#) -}
be23250cda62b47debae9077dcc81c3e
  getClientR48 :: Data.Text.Internal.Builder.Builder
  {- Arity: 3,
     Unfolding: (Text.Css.fromText Handlers.getClientR49) -}
d955c478a60e0e01c2f91ce1c046c055
  getClientR49 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# ","#) -}
1aa46b6550f9851c3f970378f42fb723
  getClientR5 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getClientR70
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getClientR6
                   eta) -}
e075f53372fbeefd1967568ad1089882
  getClientR50 :: Data.Text.Internal.Builder.Builder
  {- Arity: 3,
     Unfolding: (Text.Css.fromText Handlers.getClientR27) -}
acf9cd919f6ab419eddc00a78467e7e6
  getClientR51 :: Data.Text.Internal.Builder.Builder
  {- Arity: 3,
     Unfolding: (Text.Css.fromText Handlers.getClientR52) -}
b1ee92260933e71e84e8ef107e448e25
  getClientR52 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# ".container"#) -}
1944a51356db40e9ecaf9d8c430cb20b
  getClientR53 ::
    [Data.Text.Internal.Builder.Builder]
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,C(U)> -}
bcad159b06455e0b01df55cfe2a7107e
  getClientR54 :: Text.Css.TopLevel Text.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Css.TopBlock
                   @ Text.Css.Resolved
                   Handlers.getClientR55) -}
4b06cdf0df008445550719dca81d331c
  getClientR55 :: Text.Css.Block Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Block
                   @ Text.Css.Resolved
                   Handlers.getClientR68
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:SelectorResolved[0])))))
                   Handlers.getClientR56
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:MixinsResolved[0])))) -}
743059c2b8f411725e5bb6d0cb903245
  getClientR56 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getClientR63
                   Handlers.getClientR57) -}
5bd67ee10cc022cb103c2a7f1db5b9cd
  getClientR57 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getClientR58
                   (GHC.Types.[] @ (Text.Css.Attr Text.Css.Resolved))) -}
33eac81c77d6f0cce5a8f3075bfc0c2b
  getClientR58 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getClientR61
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getClientR59
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
46dafe120afa2be885d48e4ff7430add
  getClientR59 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR60)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
ef8ea4a5f74b3b11240726d7b625ab6a
  getClientR6 ::
    () -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1, Unfolding: (\ ds :: () -> Handlers.getClientR_k) -}
fc235dda774d2f96f011bbac675fff76
  getClientR60 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "bold"#) -}
acef994575d42e4bcbb2473125fb9f7e
  getClientR61 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR62)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
e0316a5c107b502379a67f9da237d21d
  getClientR62 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "font-weight"#) -}
68ebc6c70bf9f2eafa92c445b3fe6484
  getClientR63 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getClientR66
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getClientR64
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
f9c73610929672dc0caae12b5b18c80d
  getClientR64 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR65)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
2dd869f3b215e84cd01e7672d0fba5ea
  getClientR65 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "5%"#) -}
a49bd57dea5d0cf8d085426ea093981f
  getClientR66 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR67)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
6cd92990879919a75f6f009f7f0e2d0c
  getClientR67 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "margin-left"#) -}
71269c53ec85a2cfbef8b20ea639eab5
  getClientR68 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getClientR69)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
65a1323b4eb78c225a29f19836f2ba02
  getClientR69 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "h1"#) -}
41ed0558c1e63d9789232365a609001b
  getClientR7 :: Yesod.Core.Types.RY Foundation.Sitio -> Text.Css.Css
  {- Arity: 1,
     Unfolding: (\ _render :: Yesod.Core.Types.RY Foundation.Sitio ->
                 Handlers.getClientR8) -}
5fd852de28a5c113fd01a525596d5059
  getClientR70 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR71 #)) -}
b3434ca4a1879729d6787bac261322ef
  getClientR71 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getClientR72
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
d792f7ef787511cbb26d92265bdbbb4a
  getClientR72 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   Handlers.getClientR73
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
661e9f110da94ee3cc658ad83c7c6fca
  getClientR73 ::
    GHC.Base.Maybe
      (Text.Julius.JavascriptUrl
         (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Unfolding: (GHC.Base.Just
                   @ (Text.Julius.JavascriptUrl
                        (Yesod.Routes.Class.Route Foundation.Sitio))
                   Handlers.getClientR74
                     `cast`
                   (<Yesod.Routes.Class.Route Foundation.Sitio
                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                     -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sym (Text.Julius.NTCo:Javascript[0])))) -}
78cff3b3878825b64ff97017e1c0df68
  getClientR74 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1 -}
8e57e865827107979a7ceed62a59ecf3
  getClientR75 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.getClientR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
54b8e437196807acf2085897a96571ad
  getClientR76 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getClientR77) -}
5aa9695dd0db447ea3b302a8193485ec
  getClientR77 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getClientR78) -}
bc554ca1f99048152890cebe45c4441b
  getClientR78 :: Data.Text.Internal.Text
e6a624ae797b02e66b6df0b777aa35bc
  getClientR79 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR80 #)) -}
bf2953b9c24d5e7645f743f3598af60c
  getClientR8 :: Text.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Css.CssNoWhitespace Handlers.getClientR9) -}
e012c70a9d4039545a5b8189d81ada98
  getClientR80 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(), Handlers.getClientR81)) -}
f4b83dead3896ebbe0f37c232d21fe9c
  getClientR81 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   Handlers.getClientR82
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT
                                      Foundation.Sitio GHC.Types.IO))>_R))) -}
1511dda3b22d111bf818806097303c11
  getClientR82 ::
    [Yesod.Core.Types.Stylesheet
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
    -> [Yesod.Core.Types.Stylesheet
          (Yesod.Routes.Class.Route
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
  {- Arity: 1,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Core.Types.Stylesheet
                        (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                   Handlers.getClientR83) -}
e8bcd9efca00f8940ffd79406532c54b
  getClientR83 ::
    Yesod.Core.Types.Stylesheet
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Stylesheet
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Handlers.getClientR84
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
70c704e9a29cfb557406d3651bc239f4
  getClientR84 ::
    Yesod.Core.Types.Location
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Remote
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Handlers.getClientR85) -}
1892b89954012682e0a8f00783a1ffde
  getClientR85 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"#) -}
b0a4a7ed302f8b36d10beffbfd658865
  getClientR86 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR87 #)) -}
d5d0c9280b6c078e8f08f457cc298872
  getClientR87 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(), Handlers.getClientR88)) -}
b41e3f9c9a8ba275cfa002ddd8b1b613
  getClientR88 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   Handlers.getClientR89
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT
                                      Foundation.Sitio GHC.Types.IO))>_R))) -}
9bea138716c0930ef46ef448666a1529
  getClientR89 ::
    [Yesod.Core.Types.Script
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
    -> [Yesod.Core.Types.Script
          (Yesod.Routes.Class.Route
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
  {- Arity: 1,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Core.Types.Script
                        (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                   Handlers.getClientR90) -}
5179b12691df36f0a04c0d2a42afdf34
  getClientR9 :: [Text.Css.TopLevel Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.TopLevel Text.Css.Resolved)
                   Handlers.getClientR54
                   Handlers.getClientR10) -}
2924ed77b0f963b7377bc145e07e6c4f
  getClientR90 ::
    Yesod.Core.Types.Script
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Script
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Handlers.getClientR91
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
405f9708a003af5da7ba7e19b9f0ab69
  getClientR91 ::
    Yesod.Core.Types.Location
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Remote
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Handlers.getClientR92) -}
7dc1e4563bcdc36c0d300281fcdda4dc
  getClientR92 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"#) -}
d6dde26f1d8e0af8878a946034ce7879
  getClientR93 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR94 #)) -}
001c2b5b1d0a5e3e7db82d5a5c7f4262
  getClientR94 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(), Handlers.getClientR95)) -}
e681acdfe490764e02bb5779b9aa4a9e
  getClientR95 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))>_R))
                   Handlers.getClientR96
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT
                                      Foundation.Sitio GHC.Types.IO))>_R))) -}
c0cdcd1aa2309efb18a10226fccbd7fc
  getClientR96 :: GHC.Base.Maybe Yesod.Core.Types.Title
  {- Unfolding: (GHC.Base.Just
                   @ Yesod.Core.Types.Title
                   Handlers.getClientR97
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Title[0]))) -}
4730ed56bb9739599d65899fc8aeea14
  getClientR97 :: Text.Blaze.Internal.MarkupM ()
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getClientR98) -}
a67e38a7c52b061bd1c3c1a20af09f1b
  getClientR98 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.String Handlers.getClientR99) -}
b5f8c30f386c63c84c30cabcfaaf5c88
  getClientR99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Sistema Estacionamento | Cadastrar Cliente"#) -}
58e6c704f8c5e9be16df5ffd8b0f9ad7
  getClientR_k ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Widget.$w$ctoWidget
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.RY Foundation.Sitio)
                   Handlers.$stoWidget3
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   Handlers.$s$fMonadWidgetWidgetT
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                      @ Foundation.Sitio
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                   Handlers.getClientR7) -}
1f0121c37f47a7f580d4f2033e8e8182
  getClientR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getClientR76) -}
f9c3076dc22a1fbe533059592f2de195
  getContratoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getContratoR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
b7de6a1289a5e0a3d4ec1969071b3923
  getContratoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getContratoR25
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getContratoR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
39b7b0c29582c7009dd9edbff59c0244
  getContratoR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getContratoR19
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   (\ ds :: () -> Handlers.getContratoR_k)
                   eta) -}
3b1ad8eac538d58983a75e71b9cabee3
  getContratoR11 ::
    Yesod.Core.Types.RY Foundation.Sitio -> Text.Css.Css
  {- Arity: 1,
     Unfolding: (\ _render :: Yesod.Core.Types.RY Foundation.Sitio ->
                 Handlers.getContratoR12) -}
9d7af11cd09154b35c939a784efb3a81
  getContratoR12 :: Text.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Css.CssNoWhitespace Handlers.getContratoR13) -}
e92723946dcb6557242bb8af05dc41e4
  getContratoR13 :: [Text.Css.TopLevel Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.TopLevel Text.Css.Resolved)
                   Handlers.getClientR54
                   Handlers.getContratoR14) -}
f0741399e5c7a5d50d1060a8cfe8d22e
  getContratoR14 :: [Text.Css.TopLevel Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.TopLevel Text.Css.Resolved)
                   Handlers.getContratoR15
                   Handlers.getClientR11) -}
d7abc3140879ae983830df8bddb4b299
  getContratoR15 :: Text.Css.TopLevel Text.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Css.TopBlock
                   @ Text.Css.Resolved
                   Handlers.getContratoR16) -}
218029b4f8fed9a69291e46ea6a95396
  getContratoR16 :: Text.Css.Block Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Block
                   @ Text.Css.Resolved
                   Handlers.getContratoR17
                     `cast`
                   (Trans
                        (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                        (Sub (Sym (Text.Css.TFCo:R:SelectorResolved[0]))))
                   Handlers.getClientR30
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:MixinsResolved[0])))) -}
023417b92196c7018257aeca8b737bd1
  getContratoR17 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1,
     Unfolding: (Handlers.getContratoR18 Handlers.getClientR41) -}
6587cdc170bcff63b01341924fc94417
  getContratoR18 ::
    [Data.Text.Internal.Builder.Builder]
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,C(U)> -}
9f5f4d861b4e14ceb1b0e9ee6f6caa62
  getContratoR19 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.getContratoR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
bea52ca363cf19a018b47d04ef815ef2
  getContratoR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getContratoR24
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getContratoR3
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
3da9dda2c921d17eea1a77884ee16684
  getContratoR20 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getContratoR21) -}
ba3873b1353a265bf0805c7646d3054c
  getContratoR21 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getContratoR22) -}
a1ede49a9a7299e65a253a018e564752
  getContratoR22 :: Data.Text.Internal.Text
aced1063b8873f5973bc7c3667f9b071
  getContratoR23 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR80 #)) -}
b4b805319f745af8bf30f6f2a0e8b468
  getContratoR24 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR87 #)) -}
27d40bd3507a43944d84d256d41cf7f2
  getContratoR25 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getContratoR26 #)) -}
d85a69aeceece9734ab9b9086419267a
  getContratoR26 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(), Handlers.getContratoR27)) -}
7f144233f465269ebd9c7a427bb1b9a8
  getContratoR27 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))>_R))
                   Handlers.getContratoR28
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT
                                      Foundation.Sitio GHC.Types.IO))>_R))) -}
7af53c209651111f3a8e651ca21fcfb4
  getContratoR28 :: GHC.Base.Maybe Yesod.Core.Types.Title
  {- Unfolding: (GHC.Base.Just
                   @ Yesod.Core.Types.Title
                   Handlers.getContratoR29
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Title[0]))) -}
6c5f7df2ef42e8fb651b6e3ce4418832
  getContratoR29 :: Text.Blaze.Internal.MarkupM ()
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getContratoR30) -}
b50592c01d2bd9fa5fbffb447c651982
  getContratoR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getContratoR23
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getContratoR4
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
384f1b232a217cb4eaae93dddbae50fd
  getContratoR30 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.String
                   Handlers.getContratoR31) -}
bd535fa5bd3cc565287114019eda91ce
  getContratoR31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Sistema Estacionamento | Cadastrar Contrato"#) -}
7c2ee8a378b68feaa8ef9cf4ec0b268b
  getContratoR4 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getContratoR10
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   Handlers.getContratoR5
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Sitio>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
c695f0a56213eebca1b104d9d5ef2031
  getContratoR5 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handlers.getContratoR6 #)) -}
8336787f98c165acc3cc09a0bf5ad8b7
  getContratoR6 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getContratoR7
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
a5089ca5474e461ba2ee709b5ee67801
  getContratoR7 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   Handlers.getContratoR8
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
63a761880855613e4fffb48e68ab052c
  getContratoR8 ::
    GHC.Base.Maybe
      (Text.Julius.JavascriptUrl
         (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Unfolding: (GHC.Base.Just
                   @ (Text.Julius.JavascriptUrl
                        (Yesod.Routes.Class.Route Foundation.Sitio))
                   Handlers.getContratoR9
                     `cast`
                   (<Yesod.Routes.Class.Route Foundation.Sitio
                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                     -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sym (Text.Julius.NTCo:Javascript[0])))) -}
9f3130ca5c5f5491637ff4a762e27a07
  getContratoR9 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1 -}
335a83bbfb6df6032bd71fa7bee07b4c
  getContratoR_k ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Widget.$w$ctoWidget
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.RY Foundation.Sitio)
                   Handlers.$stoWidget3
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   Handlers.$s$fMonadWidgetWidgetT
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                      @ Foundation.Sitio
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                   Handlers.getContratoR11) -}
081c32f16abd15e25e7fea029689b3d0
  getContratoR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getContratoR20) -}
ff2ed7e5a3e45f99ab699720318b488d
  getFuncionarioR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getFuncionarioR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
59281a9912e9d6e1a3fc3ce8074a7dca
  getFuncionarioR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getFuncionarioR12
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getFuncionarioR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
6f528dcf14baab60308f0604167a792b
  getFuncionarioR10 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getFuncionarioR11) -}
5b567ace0e1b2434a6cbbd8991a5b64d
  getFuncionarioR11 :: Data.Text.Internal.Text
95ce9a6bf356086fc650e165d522670c
  getFuncionarioR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR87 #)) -}
2f9843defd62bc95068a6e96ddde54ad
  getFuncionarioR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getFuncionarioR8
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getFuncionarioR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Sitio>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
106539d8b3788f7f34e5989d25caeb2b
  getFuncionarioR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handlers.getFuncionarioR4 #)) -}
188d4b791b6b0f99b23ffaf9ec3310ba
  getFuncionarioR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getFuncionarioR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
646be242ef9b51aadc56fb7fc3334417
  getFuncionarioR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   Handlers.getFuncionarioR6
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
7a69b27c035978fd374ebf0676d75237
  getFuncionarioR6 ::
    GHC.Base.Maybe
      (Text.Julius.JavascriptUrl
         (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Unfolding: (GHC.Base.Just
                   @ (Text.Julius.JavascriptUrl
                        (Yesod.Routes.Class.Route Foundation.Sitio))
                   Handlers.getFuncionarioR7
                     `cast`
                   (<Yesod.Routes.Class.Route Foundation.Sitio
                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                     -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sym (Text.Julius.NTCo:Javascript[0])))) -}
1a4c78d5d966bbce46a02f30af7ce79c
  getFuncionarioR7 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1 -}
085f2a18b1cd51e76d58124122339503
  getFuncionarioR8 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.getFuncionarioR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
da97b88e8d5501711f50f161c549ef3e
  getFuncionarioR9 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getFuncionarioR10) -}
43cabf6d4bb1258cabe8562c31032eb4
  getFuncionarioR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getFuncionarioR9) -}
ad01fc59622629e67edeae00f8b6f48b
  getHistoricoVagaValorR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getHistoricoVagaValorR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
fb85b362165cba1f7ae08c74e7e5200b
  getHistoricoVagaValorR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.HistoricoVagaValor]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.getHistoricoVagaValorR3
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       let {
                         w :: [GHC.Types.Char]
                         = case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     (Handlers.getHistoricoVagaValorR2,
                                      case Handlers.$wa
                                             (GHC.Base.map
                                                @ (Database.Persist.Class.PersistEntity.Entity
                                                     Foundation.HistoricoVagaValor)
                                                @ Data.Aeson.Types.Internal.Value
                                                Foundation.$fToJSONEntity_$ctoJSON
                                                ipv3) of ww { (##) ww1 ->
                                      Data.Aeson.Types.Internal.Array ww1 })
                                     (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                           case Data.Text.Internal.Builder.$wtoLazyTextWith
                                  112
                                  (Data.Aeson.Encode.encodeToTextBuilder
                                     (Data.Aeson.Types.Internal.Object dt1)) of dt2 { DEFAULT ->
                           Yesod.Core.Content.$wunfold dt2 0 } }
                       } in
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               (\ @ r1
                                  w1 :: Data.ByteString.Builder.Internal.BufferRange
                                        -> GHC.Types.IO
                                             (Data.ByteString.Builder.Internal.BuildSignal r1)
                                  w2 :: Data.ByteString.Builder.Internal.BufferRange
                                  w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                Yesod.Core.Content.$fToTypedContentValue2 @ r1 w w1 ww1 ww2 w3 })
                                 `cast`
                               (Trans
                                    (forall r1.
                                     <Data.ByteString.Builder.Internal.BufferRange
                                      -> GHC.Types.IO
                                           (Data.ByteString.Builder.Internal.BuildSignal r1)>_R
                                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.NTCo:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r1>_R))
                                    (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                               (GHC.Base.Nothing @ GHC.Types.Int))) }))
                   ipv2 } }) -}
d678ae79c614df5339d0c467ec8696a2
  getHistoricoVagaValorR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "data"#) -}
df03b067d8f437089e4676b3e975810a
  getHistoricoVagaValorR3 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.HistoricoVagaValor]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.HistoricoVagaValor]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   Handlers.getHistoricoVagaValorR4
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.HistoricoVagaValor]>_N))) -}
c43c6f7dffd44c2d37687502cc7db4d5
  getHistoricoVagaValorR4 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.HistoricoVagaValor]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.HistoricoVagaValor)))
                   = Handlers.getHistoricoVagaValorR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.HistoricoVagaValor))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.HistoricoVagaValor))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.HistoricoVagaValor))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.HistoricoVagaValor))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.HistoricoVagaValor]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.HistoricoVagaValor)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.HistoricoVagaValor)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.HistoricoVagaValor]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.HistoricoVagaValor]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.HistoricoVagaValor]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.HistoricoVagaValor]>_N)))) -}
696330b10574cfb944ec841bc2f014ea
  getHistoricoVagaValorR5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.HistoricoVagaValor]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.HistoricoVagaValor)
                   Handlers.getHistoricoVagaValorR6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.HistoricoVagaValor))) -}
28950c5e249c2292e3b528e4fac9d5ff
  getHistoricoVagaValorR6 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.HistoricoVagaValor
  {- Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.HistoricoVagaValor
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.HistoricoVagaValor)
                   Foundation.$fPersistEntityHistoricoVagaValor_$s$WHistoricoVagaValorId) -}
ecd80050fd42aaf195c11c4afd457934
  getHistoricoVagaValorR7 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.HistoricoVagaValor]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.HistoricoVagaValor]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.HistoricoVagaValor)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.HistoricoVagaValor
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityHistoricoVagaValor
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Control.Monad.IO.Class.$fMonadIOIO) -}
652d4633764922cb96e661cc4ff75645
  getHistoricoVagaValorR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.HistoricoVagaValor)))
  {- Unfolding: (Handlers.getHistoricoVagaValorR7
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.HistoricoVagaValor))
                   Handlers.getHistoricoVagaValorR5) -}
a3f6893ed11f8d3f1e53c3b5ca15c05d
  getListaFuncionarioR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListaFuncionarioR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
da9a290bfb9c15ff71e15c1f51ae0ad5
  getListaFuncionarioR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Funcionario]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.getListaFuncionarioR2
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       let {
                         w :: [GHC.Types.Char]
                         = case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     (Handlers.getHistoricoVagaValorR2,
                                      case Handlers.$wa
                                             (GHC.Base.map
                                                @ (Database.Persist.Class.PersistEntity.Entity
                                                     Foundation.Funcionario)
                                                @ Data.Aeson.Types.Internal.Value
                                                Foundation.$fToJSONEntity0_$ctoJSON
                                                ipv3) of ww { (##) ww1 ->
                                      Data.Aeson.Types.Internal.Array ww1 })
                                     (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                           case Data.Text.Internal.Builder.$wtoLazyTextWith
                                  112
                                  (Data.Aeson.Encode.encodeToTextBuilder
                                     (Data.Aeson.Types.Internal.Object dt1)) of dt2 { DEFAULT ->
                           Yesod.Core.Content.$wunfold dt2 0 } }
                       } in
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               (\ @ r1
                                  w1 :: Data.ByteString.Builder.Internal.BufferRange
                                        -> GHC.Types.IO
                                             (Data.ByteString.Builder.Internal.BuildSignal r1)
                                  w2 :: Data.ByteString.Builder.Internal.BufferRange
                                  w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                Yesod.Core.Content.$fToTypedContentValue2 @ r1 w w1 ww1 ww2 w3 })
                                 `cast`
                               (Trans
                                    (forall r1.
                                     <Data.ByteString.Builder.Internal.BufferRange
                                      -> GHC.Types.IO
                                           (Data.ByteString.Builder.Internal.BuildSignal r1)>_R
                                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.NTCo:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r1>_R))
                                    (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                               (GHC.Base.Nothing @ GHC.Types.Int))) }))
                   ipv2 } }) -}
b481821e3a109b59c3a0a94328f28b95
  getListaFuncionarioR2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Funcionario]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.Funcionario]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   Handlers.getListaFuncionarioR3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Funcionario]>_N))) -}
c59c52e9fba705f321c9128f1006ffc7
  getListaFuncionarioR3 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Funcionario]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Funcionario)))
                   = Handlers.getListaFuncionarioR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Funcionario))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Funcionario))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Funcionario))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Funcionario))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Funcionario]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Funcionario)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Funcionario)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Funcionario]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Funcionario]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Funcionario]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Funcionario]>_N)))) -}
4bbeab37dd3e1702e3fc8cd886f6b061
  getListaFuncionarioR4 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Funcionario]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Funcionario)
                   Handlers.getListaFuncionarioR5
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Funcionario))) -}
1fb5c5fc41e0f98fff7c4a4f78e58ce5
  getListaFuncionarioR5 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Funcionario
  {- Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Funcionario
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   Foundation.$fPersistEntityFuncionario_$s$WFuncionarioId) -}
0a4417c2691cff37c871a6c9ba3e04ff
  getListaFuncionarioR6 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Funcionario]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Funcionario]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Funcionario)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Funcionario
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityFuncionario
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Control.Monad.IO.Class.$fMonadIOIO) -}
85301e1a576805b365bb895b91e375c4
  getListaFuncionarioR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Funcionario)))
  {- Unfolding: (Handlers.getListaFuncionarioR6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Funcionario))
                   Handlers.getListaFuncionarioR4) -}
35f41b67423fd6369811a7287f45e408
  getListaR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
0b652e7056f86e2e34c719047062f350
  getListaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Client]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.getListaR2
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       let {
                         w :: [GHC.Types.Char]
                         = case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     (Handlers.getHistoricoVagaValorR2,
                                      case Handlers.$wa
                                             (GHC.Base.map
                                                @ (Database.Persist.Class.PersistEntity.Entity
                                                     Foundation.Client)
                                                @ Data.Aeson.Types.Internal.Value
                                                Foundation.$fToJSONEntity11_$ctoJSON
                                                ipv3) of ww { (##) ww1 ->
                                      Data.Aeson.Types.Internal.Array ww1 })
                                     (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                           case Data.Text.Internal.Builder.$wtoLazyTextWith
                                  112
                                  (Data.Aeson.Encode.encodeToTextBuilder
                                     (Data.Aeson.Types.Internal.Object dt1)) of dt2 { DEFAULT ->
                           Yesod.Core.Content.$wunfold dt2 0 } }
                       } in
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               (\ @ r1
                                  w1 :: Data.ByteString.Builder.Internal.BufferRange
                                        -> GHC.Types.IO
                                             (Data.ByteString.Builder.Internal.BuildSignal r1)
                                  w2 :: Data.ByteString.Builder.Internal.BufferRange
                                  w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                Yesod.Core.Content.$fToTypedContentValue2 @ r1 w w1 ww1 ww2 w3 })
                                 `cast`
                               (Trans
                                    (forall r1.
                                     <Data.ByteString.Builder.Internal.BufferRange
                                      -> GHC.Types.IO
                                           (Data.ByteString.Builder.Internal.BuildSignal r1)>_R
                                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.NTCo:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r1>_R))
                                    (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                               (GHC.Base.Nothing @ GHC.Types.Int))) }))
                   ipv2 } }) -}
7f8b1d1ce0b30321acccb7d2608fe4f7
  getListaR2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Client]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity Foundation.Client]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   Handlers.getListaR3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Client]>_N))) -}
df4c8b2aaa685cd4013080cdef324115
  getListaR3 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Client]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Client)))
                   = Handlers.getListaR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Client))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Client))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Client))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Client))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Client]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Client)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Client)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Client]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Client]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Client]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Client]>_N)))) -}
98b72f9b23a206b902f6ae63fc768e81
  getListaR4 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Client]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Client)
                   Handlers.getListaR5
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Client))) -}
5a38f67cdd4c46387c30e41dd79a58cc
  getListaR5 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Client
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Client
                   @ Data.Text.Internal.Text
                   Handlers.getListaR6
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)) -}
f8b620a6ecfd56a2775a54feb9799edb
  getListaR6 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientNome
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
fefdde3bab0269ff53f2bbf5ed0e9de6
  getListaR7 ::
    [Database.Persist.Class.PersistEntity.Filter Foundation.Client]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Client]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity Foundation.Client)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Client
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityClient
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Control.Monad.IO.Class.$fMonadIOIO) -}
8a3b5bcaa4fb8d739af7673e8e6b63c9
  getListaR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Client)))
  {- Unfolding: (Handlers.getListaR7
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Client))
                   Handlers.getListaR4) -}
ac555def24bd6b45d3464ab01f50e844
  getListaTpVeiculoR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListaTpVeiculoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
0715461385d628d7759df397966df5d0
  getListaTpVeiculoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.TipoVeiculo]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.getListaTpVeiculoR2
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       let {
                         w :: [GHC.Types.Char]
                         = case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     (Handlers.getHistoricoVagaValorR2,
                                      case Handlers.$wa
                                             (GHC.Base.map
                                                @ (Database.Persist.Class.PersistEntity.Entity
                                                     Foundation.TipoVeiculo)
                                                @ Data.Aeson.Types.Internal.Value
                                                Foundation.$fToJSONEntity7_$ctoJSON
                                                ipv3) of ww { (##) ww1 ->
                                      Data.Aeson.Types.Internal.Array ww1 })
                                     (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                           case Data.Text.Internal.Builder.$wtoLazyTextWith
                                  112
                                  (Data.Aeson.Encode.encodeToTextBuilder
                                     (Data.Aeson.Types.Internal.Object dt1)) of dt2 { DEFAULT ->
                           Yesod.Core.Content.$wunfold dt2 0 } }
                       } in
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               (\ @ r1
                                  w1 :: Data.ByteString.Builder.Internal.BufferRange
                                        -> GHC.Types.IO
                                             (Data.ByteString.Builder.Internal.BuildSignal r1)
                                  w2 :: Data.ByteString.Builder.Internal.BufferRange
                                  w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                Yesod.Core.Content.$fToTypedContentValue2 @ r1 w w1 ww1 ww2 w3 })
                                 `cast`
                               (Trans
                                    (forall r1.
                                     <Data.ByteString.Builder.Internal.BufferRange
                                      -> GHC.Types.IO
                                           (Data.ByteString.Builder.Internal.BuildSignal r1)>_R
                                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.NTCo:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r1>_R))
                                    (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                               (GHC.Base.Nothing @ GHC.Types.Int))) }))
                   ipv2 } }) -}
18d4ebda7a227383e7fbc6965a5d1f16
  getListaTpVeiculoR2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.TipoVeiculo]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.TipoVeiculo]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   Handlers.getListaTpVeiculoR3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.TipoVeiculo]>_N))) -}
ddcd86ef7a3270893a8e72c4668d20ea
  getListaTpVeiculoR3 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.TipoVeiculo]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.TipoVeiculo)))
                   = Handlers.getListaTpVeiculoR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.TipoVeiculo))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.TipoVeiculo))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.TipoVeiculo))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.TipoVeiculo))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.TipoVeiculo]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.TipoVeiculo)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.TipoVeiculo)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.TipoVeiculo]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.TipoVeiculo]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.TipoVeiculo]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.TipoVeiculo]>_N)))) -}
4c4ed77ffcf091d65541ce9ca7007276
  getListaTpVeiculoR4 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.TipoVeiculo]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.TipoVeiculo)
                   Handlers.getListaTpVeiculoR5
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.TipoVeiculo))) -}
9f16a5cba1c1a3ee0e5de248f7e9ca46
  getListaTpVeiculoR5 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.TipoVeiculo
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.TipoVeiculo
                   @ Data.Text.Internal.Text
                   Handlers.getListaTpVeiculoR6
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldTipoVeiculotyp[0])) <Data.Text.Internal.Text>_N)) -}
d860e314bab7ece56cf4769615188a69
  getListaTpVeiculoR6 ::
    Foundation.R:EntityFieldTipoVeiculotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.TipoVeiculoNome
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
865ca98f4db87228eaa96defa5f43cc7
  getListaTpVeiculoR7 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.TipoVeiculo]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.TipoVeiculo]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.TipoVeiculo)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.TipoVeiculo
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityTipoVeiculo
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Control.Monad.IO.Class.$fMonadIOIO) -}
4605df0753ff5114ef9dedaf05a9ace9
  getListaTpVeiculoR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.TipoVeiculo)))
  {- Unfolding: (Handlers.getListaTpVeiculoR7
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.TipoVeiculo))
                   Handlers.getListaTpVeiculoR4) -}
37b25867ba092947077385ba23880127
  getListaVagaR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListaVagaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
a09824c98aca1ded317d057299da9729
  getListaVagaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Vaga]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.getListaVagaR2
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       let {
                         w :: [GHC.Types.Char]
                         = case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     (Handlers.getHistoricoVagaValorR2,
                                      case Handlers.$wa
                                             (GHC.Base.map
                                                @ (Database.Persist.Class.PersistEntity.Entity
                                                     Foundation.Vaga)
                                                @ Data.Aeson.Types.Internal.Value
                                                Foundation.$fToJSONEntity4_$ctoJSON
                                                ipv3) of ww { (##) ww1 ->
                                      Data.Aeson.Types.Internal.Array ww1 })
                                     (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                           case Data.Text.Internal.Builder.$wtoLazyTextWith
                                  112
                                  (Data.Aeson.Encode.encodeToTextBuilder
                                     (Data.Aeson.Types.Internal.Object dt1)) of dt2 { DEFAULT ->
                           Yesod.Core.Content.$wunfold dt2 0 } }
                       } in
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               (\ @ r1
                                  w1 :: Data.ByteString.Builder.Internal.BufferRange
                                        -> GHC.Types.IO
                                             (Data.ByteString.Builder.Internal.BuildSignal r1)
                                  w2 :: Data.ByteString.Builder.Internal.BufferRange
                                  w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                Yesod.Core.Content.$fToTypedContentValue2 @ r1 w w1 ww1 ww2 w3 })
                                 `cast`
                               (Trans
                                    (forall r1.
                                     <Data.ByteString.Builder.Internal.BufferRange
                                      -> GHC.Types.IO
                                           (Data.ByteString.Builder.Internal.BuildSignal r1)>_R
                                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.NTCo:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r1>_R))
                                    (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                               (GHC.Base.Nothing @ GHC.Types.Int))) }))
                   ipv2 } }) -}
af47f2579da1e203a9ed1e37b135389e
  getListaVagaR2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Vaga]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity Foundation.Vaga]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   Handlers.getListaVagaR3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Vaga]>_N))) -}
ad6099e5823a5fe8425cabcadc95653d
  getListaVagaR3 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Vaga]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Vaga)))
                   = Handlers.getListaVagaR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity Foundation.Vaga))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Vaga))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity Foundation.Vaga))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Vaga))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Vaga]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1 @ Foundation.Vaga)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Vaga)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Vaga]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity Foundation.Vaga]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Vaga]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Vaga]>_N)))) -}
2979e885210c72332c5a5ee17a99c2ce
  getListaVagaR4 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vaga]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vaga)
                   Handlers.getListaVagaR5
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Vaga))) -}
134677602cc14ab814f74027bcd4db7f
  getListaVagaR5 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vaga
  {- Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Vaga
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Vaga)
                   Foundation.$fPersistEntityVaga_$s$WVagaId) -}
071439b90a336f0fa63e0f57919ca23f
  getListaVagaR6 ::
    [Database.Persist.Class.PersistEntity.Filter Foundation.Vaga]
    -> [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Vaga]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity Foundation.Vaga)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Vaga
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityVaga
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Control.Monad.IO.Class.$fMonadIOIO) -}
2cc3c38abb82524b20512448a7272454
  getListaVagaR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Vaga)))
  {- Unfolding: (Handlers.getListaVagaR6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Vaga))
                   Handlers.getListaVagaR4) -}
7228995b2381814e999febe346caf7dd
  getListaVagaValorR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListaVagaValorR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
865c39eae689bede25cb4fc4f4bee59c
  getListaVagaValorR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.VagaValor]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.getListaVagaValorR2
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       let {
                         w :: [GHC.Types.Char]
                         = case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     (Handlers.getHistoricoVagaValorR2,
                                      case Handlers.$wa
                                             (GHC.Base.map
                                                @ (Database.Persist.Class.PersistEntity.Entity
                                                     Foundation.VagaValor)
                                                @ Data.Aeson.Types.Internal.Value
                                                Foundation.$fToJSONEntity5_$ctoJSON
                                                ipv3) of ww { (##) ww1 ->
                                      Data.Aeson.Types.Internal.Array ww1 })
                                     (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                           case Data.Text.Internal.Builder.$wtoLazyTextWith
                                  112
                                  (Data.Aeson.Encode.encodeToTextBuilder
                                     (Data.Aeson.Types.Internal.Object dt1)) of dt2 { DEFAULT ->
                           Yesod.Core.Content.$wunfold dt2 0 } }
                       } in
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               (\ @ r1
                                  w1 :: Data.ByteString.Builder.Internal.BufferRange
                                        -> GHC.Types.IO
                                             (Data.ByteString.Builder.Internal.BuildSignal r1)
                                  w2 :: Data.ByteString.Builder.Internal.BufferRange
                                  w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                Yesod.Core.Content.$fToTypedContentValue2 @ r1 w w1 ww1 ww2 w3 })
                                 `cast`
                               (Trans
                                    (forall r1.
                                     <Data.ByteString.Builder.Internal.BufferRange
                                      -> GHC.Types.IO
                                           (Data.ByteString.Builder.Internal.BuildSignal r1)>_R
                                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.NTCo:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r1>_R))
                                    (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                               (GHC.Base.Nothing @ GHC.Types.Int))) }))
                   ipv2 } }) -}
b10d869950c2b003dfa0d39d5c5071bc
  getListaVagaValorR2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.VagaValor]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.VagaValor]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   Handlers.getListaVagaValorR3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.VagaValor]>_N))) -}
a02ba2702ff7b12009f558a86b0b1d77
  getListaVagaValorR3 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.VagaValor]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.VagaValor)))
                   = Handlers.getListaVagaValorR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.VagaValor))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.VagaValor))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.VagaValor))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.VagaValor))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.VagaValor]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.VagaValor)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.VagaValor)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.VagaValor]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.VagaValor]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.VagaValor]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.VagaValor]>_N)))) -}
2cf19e0154bee3116566022c28ac8222
  getListaVagaValorR4 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.VagaValor]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.VagaValor)
                   Handlers.getListaVagaValorR5
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.VagaValor))) -}
61e6caa9567fa5a5bdf8bb639679ea2d
  getListaVagaValorR5 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.VagaValor
  {- Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.VagaValor
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.VagaValor)
                   Foundation.$fPersistEntityVagaValor_$s$WVagaValorId) -}
3ea79ca7d1e105ab740ff145a7ffbc16
  getListaVagaValorR6 ::
    [Database.Persist.Class.PersistEntity.Filter Foundation.VagaValor]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.VagaValor]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.VagaValor)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.VagaValor
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityVagaValor
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Control.Monad.IO.Class.$fMonadIOIO) -}
a7d1dd2dd77988114b4a1d7784a5176c
  getListaVagaValorR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.VagaValor)))
  {- Unfolding: (Handlers.getListaVagaValorR6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.VagaValor))
                   Handlers.getListaVagaValorR4) -}
ccf1e997e8fe1fea5bc7314ac69437a8
  getListaVeiculoR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListaVeiculoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
358fdc761b8eefe51e4b5aa556699d78
  getListaVeiculoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.getListaVeiculoR2
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                      (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                       let {
                         w :: [GHC.Types.Char]
                         = case Data.Aeson.Types.Internal.$sfromList1
                                  @ Data.Aeson.Types.Internal.Value
                                  (GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Pair
                                     (Handlers.getHistoricoVagaValorR2,
                                      case Handlers.$wa
                                             (GHC.Base.map
                                                @ (Database.Persist.Class.PersistEntity.Entity
                                                     Foundation.Veiculo)
                                                @ Data.Aeson.Types.Internal.Value
                                                Foundation.$fToJSONEntity6_$ctoJSON
                                                ipv3) of ww { (##) ww1 ->
                                      Data.Aeson.Types.Internal.Array ww1 })
                                     (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                  (Data.HashMap.Base.Empty
                                     @ Data.Text.Internal.Text
                                     @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                           case Data.Text.Internal.Builder.$wtoLazyTextWith
                                  112
                                  (Data.Aeson.Encode.encodeToTextBuilder
                                     (Data.Aeson.Types.Internal.Object dt1)) of dt2 { DEFAULT ->
                           Yesod.Core.Content.$wunfold dt2 0 } }
                       } in
                       Yesod.Core.Types.HCContent
                         Network.HTTP.Types.Status.status200
                         (Yesod.Core.Types.TypedContent
                            dt
                            (Yesod.Core.Types.ContentBuilder
                               (\ @ r1
                                  w1 :: Data.ByteString.Builder.Internal.BufferRange
                                        -> GHC.Types.IO
                                             (Data.ByteString.Builder.Internal.BuildSignal r1)
                                  w2 :: Data.ByteString.Builder.Internal.BufferRange
                                  w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                Yesod.Core.Content.$fToTypedContentValue2 @ r1 w w1 ww1 ww2 w3 })
                                 `cast`
                               (Trans
                                    (forall r1.
                                     <Data.ByteString.Builder.Internal.BufferRange
                                      -> GHC.Types.IO
                                           (Data.ByteString.Builder.Internal.BuildSignal r1)>_R
                                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.NTCo:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r1>_R))
                                    (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                               (GHC.Base.Nothing @ GHC.Types.Int))) }))
                   ipv2 } }) -}
d1c6f5eee8d39ff3b3c16b3bf5b18582
  getListaVeiculoR2 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   Handlers.getListaVeiculoR3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Veiculo]>_N))) -}
dd7be782c2df98c966e0dc3c4153fd54
  getListaVeiculoR3 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo)))
                   = Handlers.getListaVeiculoR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Veiculo))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Veiculo))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Veiculo))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Veiculo)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Veiculo]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Veiculo]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Veiculo]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Veiculo]>_N)))) -}
2e8b2eae05689009d6d4b0b287d4c170
  getListaVeiculoR4 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Veiculo]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Veiculo)
                   Handlers.getListaVeiculoR5
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Veiculo))) -}
7cb7438aabb0813032dad447cb28e25a
  getListaVeiculoR5 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Veiculo
  {- Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Veiculo
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Veiculo)
                   Foundation.$fPersistEntityVeiculo_$s$WVeiculoId) -}
904d0be7979cb4ac5b607aebef5a26ce
  getListaVeiculoR6 ::
    [Database.Persist.Class.PersistEntity.Filter Foundation.Veiculo]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Veiculo]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Veiculo
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityVeiculo
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Control.Monad.IO.Class.$fMonadIOIO) -}
b027e999e6a91970fe2e89f96a1205d8
  getListaVeiculoR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Veiculo)))
  {- Unfolding: (Handlers.getListaVeiculoR6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Veiculo))
                   Handlers.getListaVeiculoR4) -}
ab2958f907b9a74039b6d418a0c39d53
  getTipoVeiculoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getTipoVeiculoR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
84eef20fe754328cfef08dc24ff83b92
  getTipoVeiculoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getTipoVeiculoR12
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getTipoVeiculoR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
ff82159d7c70714c1c19289927cc16cc
  getTipoVeiculoR10 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getTipoVeiculoR11) -}
b1990553197bb09a0fde717c873c1ed6
  getTipoVeiculoR11 :: Data.Text.Internal.Text
ba2df6b6b3a2ff5fa281583d892a8bce
  getTipoVeiculoR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR87 #)) -}
80a36b3e013899a8e82eb7b3e6732387
  getTipoVeiculoR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getTipoVeiculoR8
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getTipoVeiculoR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Sitio>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
8e75f31bcafbf5fe7148873a0fbacd46
  getTipoVeiculoR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handlers.getTipoVeiculoR4 #)) -}
34169cda91bd127707a3755ecc7c5a7f
  getTipoVeiculoR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getTipoVeiculoR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
19d0619acc1c9b1e4b0d88ae5b5f2fb2
  getTipoVeiculoR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   Handlers.getTipoVeiculoR6
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
65ae8deabc0d117c2c112849520e9db2
  getTipoVeiculoR6 ::
    GHC.Base.Maybe
      (Text.Julius.JavascriptUrl
         (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Unfolding: (GHC.Base.Just
                   @ (Text.Julius.JavascriptUrl
                        (Yesod.Routes.Class.Route Foundation.Sitio))
                   Handlers.getTipoVeiculoR7
                     `cast`
                   (<Yesod.Routes.Class.Route Foundation.Sitio
                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                     -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sym (Text.Julius.NTCo:Javascript[0])))) -}
c781eafc0d1153b57ca9f1372d6012f3
  getTipoVeiculoR7 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1 -}
ca5bb307a31795fbf80a5c63757d54f4
  getTipoVeiculoR8 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.getTipoVeiculoR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
fb159545887df7c0b6ee96730eea5000
  getTipoVeiculoR9 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getTipoVeiculoR10) -}
3b38ec1f8dd3cd6a1f7ac5cd08323ecf
  getTipoVeiculoR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getTipoVeiculoR9) -}
797ad68a0282bc0cb51c34715cac72ee
  getVagaR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getVagaR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
cdf049d9ca190cd82548249e6805ad17
  getVagaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getVagaR12
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getVagaR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
c735d66ce99f1567a2b5f02c0fbed8ee
  getVagaR10 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getVagaR11) -}
4c2180394ec66b9b974b43ab701dd0ba
  getVagaR11 :: Data.Text.Internal.Text
cf97fb5144be7d61c81705e9be51e07a
  getVagaR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR87 #)) -}
750a0364437692fe676b92ae32254918
  getVagaR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getVagaR8
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getVagaR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Sitio>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
f9057ac1e6fcfe6beebd87bcd9096ad2
  getVagaR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handlers.getVagaR4 #)) -}
981f1c0ff585ca4d01c942d2d3dd33a5
  getVagaR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getVagaR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
1412a29b39e25ffb454b35897b986b05
  getVagaR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   Handlers.getVagaR6
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
323db8531a2a6d4090070add7ba0ae20
  getVagaR6 ::
    GHC.Base.Maybe
      (Text.Julius.JavascriptUrl
         (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Unfolding: (GHC.Base.Just
                   @ (Text.Julius.JavascriptUrl
                        (Yesod.Routes.Class.Route Foundation.Sitio))
                   Handlers.getVagaR7
                     `cast`
                   (<Yesod.Routes.Class.Route Foundation.Sitio
                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                     -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sym (Text.Julius.NTCo:Javascript[0])))) -}
cf1dd0f0b1e4148f7c838576ab7656ad
  getVagaR7 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1 -}
d137388664c5ebfc9d477ae825f7cfda
  getVagaR8 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.getVagaR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
7142e958c780aeb7e822dc2e171eec18
  getVagaR9 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getVagaR10) -}
e1b9a53cfeb334571226c7f972fc7135
  getVagaR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getVagaR9) -}
a1435ec414acb441b8baa92a4f5b64be
  getVagaValorR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getVagaValorR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
0a6870d1ffbed89d611fad55d6fcc64b
  getVagaValorR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getVagaValorR12
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getVagaValorR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
f4625c64808f3fe6cdd73a0c90548c54
  getVagaValorR10 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text
                   Handlers.getVagaValorR11) -}
9af4ae607ef754b6cdd1c0ebe3916d38
  getVagaValorR11 :: Data.Text.Internal.Text
8c82ed305c64055844066adae4f6c757
  getVagaValorR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR87 #)) -}
3a72913cbe49271f8e976c2bf68ab646
  getVagaValorR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getVagaValorR8
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getVagaValorR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Sitio>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
988aae584f6294a532205bb79c9eaa5c
  getVagaValorR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handlers.getVagaValorR4 #)) -}
ae5bfb7ab150ad7eec63e314fb01f505
  getVagaValorR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getVagaValorR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
1ffb888dde5365fa20fbb2c6618e88d1
  getVagaValorR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   Handlers.getVagaValorR6
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
294df0f0216e3fd8041e527412efd1d4
  getVagaValorR6 ::
    GHC.Base.Maybe
      (Text.Julius.JavascriptUrl
         (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Unfolding: (GHC.Base.Just
                   @ (Text.Julius.JavascriptUrl
                        (Yesod.Routes.Class.Route Foundation.Sitio))
                   Handlers.getVagaValorR7
                     `cast`
                   (<Yesod.Routes.Class.Route Foundation.Sitio
                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                     -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sym (Text.Julius.NTCo:Javascript[0])))) -}
f5abd5714af15cedddd70e30a440a5be
  getVagaValorR7 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1 -}
c36b5cc729dd313cb29b2ddcb3eb1445
  getVagaValorR8 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.getVagaValorR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
6eead6bac4c5b5818dfea446b0cfef0c
  getVagaValorR9 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getVagaValorR10) -}
5f2b93055762b1fd8f16864104f4d711
  getVagaValorR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getVagaValorR9) -}
9a094276f9ba662ce9fcc2bf8c531e8a
  getVeiculoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Unfolding: (Foundation.$fYesodSitio_$cdefaultLayout
                   Handlers.getVeiculoR1
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
9a21ac8b5180caaac29c79dfcae2a2e0
  getVeiculoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (\ eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getVeiculoR12
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getVeiculoR2
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   eta) -}
8a0a6c1e05c62c70c4822d2c98af9c40
  getVeiculoR10 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text Handlers.getVeiculoR11) -}
e815ecf4a3688f4006bf8ff8b32ab79c
  getVeiculoR11 :: Data.Text.Internal.Text
6ab680fcd0f9e0dc07762f7498ddb5ef
  getVeiculoR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# w1, Handlers.getClientR87 #)) -}
fb1209305beae723fb7014c5e4324823
  getVeiculoR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 2,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handlers.getVeiculoR8
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       ((<()>_R,
                                         (Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                         <Foundation.Sitio>_N
                                                         <GHC.Types.IO>_N)))_R)_R))_R))
                        (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   Handlers.getVeiculoR3
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.NTCo:IO[0]
                                            ((<()>_R,
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                              <Foundation.Sitio>_N
                                                              <GHC.Types.IO>_N)))_R)_R))_R))
                             (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
351195a9580558e188035f2df69f4ce3
  getVeiculoR3 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handlers.getVeiculoR4 #)) -}
3bef6c357eeb5c45df7fae97f86b6d82
  getVeiculoR4 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.getVeiculoR5
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
31dd50b63c658bfc355da348742d7578
  getVeiculoR5 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   Handlers.getVeiculoR6
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
309f12b8f1350264037f4864de00bff5
  getVeiculoR6 ::
    GHC.Base.Maybe
      (Text.Julius.JavascriptUrl
         (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Unfolding: (GHC.Base.Just
                   @ (Text.Julius.JavascriptUrl
                        (Yesod.Routes.Class.Route Foundation.Sitio))
                   Handlers.getVeiculoR7
                     `cast`
                   (<Yesod.Routes.Class.Route Foundation.Sitio
                     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                     -> Data.Text.Internal.Text>_R
                    ->_R Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sym (Text.Julius.NTCo:Javascript[0])))) -}
4a1f0f3f0bcbb74c97a9c3fdba6219d7
  getVeiculoR7 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> forall s.
       (Data.Text.Internal.Builder.Buffer s
        -> GHC.ST.ST s [Data.Text.Internal.Text])
       -> Data.Text.Internal.Builder.Buffer s
       -> GHC.ST.ST s [Data.Text.Internal.Text]
  {- Arity: 1 -}
ed51aa4a9ead186f015d20570451ec16
  getVeiculoR8 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.getVeiculoR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
0d94ad8dbb2c251a8456f4f2c3bdb0f7
  getVeiculoR9 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getVeiculoR10) -}
8c54d5e665e2dca4bf5a4a817f71f62d
  getVeiculoR_x :: Text.Blaze.Html.Html
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getVeiculoR9) -}
1a21f3ee37b72150c3838ccd4d44094b
  postAvulsoR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postAvulsoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
09abfa576995ceab23ce4fadc6ca60e4
  postAvulsoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postAvulsoR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Avulso>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Avulso>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Avulso)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.Avulso)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postAvulsoR10 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
20abc28d6a5bace6891b0bee158874a0
  postAvulsoR10 ::
    Foundation.Avulso
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Avulso)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Avulso
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityAvulso) -}
f275157081f0aaba914a71273ed862d5
  postAvulsoR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.Avulso
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Avulso
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONAvulso_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.Avulso>_N))) -}
d67d51ca3c018e0287a0fcf44b814be7
  postAvulsoR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Handlers.postAvulsoR3) -}
fdeebac8e57755f365cfd269c74bf8e9
  postAvulsoR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status200
                   Handlers.postAvulsoR4 }) -}
d13f247b7ab86a2818c2a735a3cb50ac
  postAvulsoR4 :: Yesod.Core.Types.TypedContent
  {- Unfolding: (Yesod.Core.Types.TypedContent
                   Yesod.Core.Content.typeJson
                   Handlers.postAvulsoR5) -}
fd7c8062fe204fd219f1ab29b06edd55
  postAvulsoR5 :: Yesod.Core.Types.Content
  {- Unfolding: (Yesod.Core.Types.ContentBuilder
                   Handlers.postAvulsoR6
                     `cast`
                   (Trans
                        (forall r.
                         <Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                        (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
9bc5d4ede3ce7def3435756ef453805e
  postAvulsoR6 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (\ @ r
                   w1 :: Data.ByteString.Builder.Internal.BufferRange
                         -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                   w2 :: Data.ByteString.Builder.Internal.BufferRange
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Yesod.Core.Content.$fToTypedContentValue2
                   @ r
                   Handlers.postAvulsoR_w
                   w1
                   ww1
                   ww2
                   w3 }) -}
9218ffa9f86bf7d14e1a27de54fcf16b
  postAvulsoR7 :: [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   Handlers.postAvulsoR8
                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)) -}
90ff032b57cd94802a0f190cd776c4e5
  postAvulsoR8 ::
    (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
  {- Unfolding: ((Handlers.deleteDeleteFuncionarioR10,
                  Handlers.postAvulsoR9)) -}
04629ebf967745cf527ddbd17b1d0d72
  postAvulsoR9 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "CREATED"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
32754f94d241d084e4806aee3a0c3b21
  postAvulsoR_w :: [GHC.Types.Char]
  {- Unfolding: (case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        Handlers.postAvulsoR7
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 case Data.Text.Internal.Builder.$wtoLazyTextWith
                        112
                        (Data.Aeson.Encode.encodeToTextBuilder
                           (Data.Aeson.Types.Internal.Object dt)) of dt1 { DEFAULT ->
                 Yesod.Core.Content.$wunfold dt1 0 } }) -}
ae39d86767636b855432f995dad7fae8
  postClientR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postClientR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
214253e541f4b7cc7c90613b45e48ead
  postClientR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postClientR10
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Client>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Client>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Client)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.Client)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postClientR9 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postClientR2
                   ipv4 } } }) -}
926f2cac7d7343c7e50d770372b8f736
  postClientR10 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.Client
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Client
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONClient_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.Client>_N))) -}
7438910eed66ad134cfcedb857c98928
  postClientR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Handlers.postClientR3) -}
cf5142c66e01a6661c21c793f8d8b5d7
  postClientR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status200
                   Handlers.postClientR4 }) -}
084bb41262f6c17abbcf062543655b7a
  postClientR4 :: Yesod.Core.Types.TypedContent
  {- Unfolding: (Yesod.Core.Types.TypedContent
                   Yesod.Core.Content.typeJson
                   Handlers.postClientR5) -}
1121eb0af63a3e4012daff6f575d2ce9
  postClientR5 :: Yesod.Core.Types.Content
  {- Unfolding: (Yesod.Core.Types.ContentBuilder
                   Handlers.postClientR6
                     `cast`
                   (Trans
                        (forall r.
                         <Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                        (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
48d16df0f93390c5b1b3894c49f44d7f
  postClientR6 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (\ @ r
                   w1 :: Data.ByteString.Builder.Internal.BufferRange
                         -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                   w2 :: Data.ByteString.Builder.Internal.BufferRange
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Yesod.Core.Content.$fToTypedContentValue2
                   @ r
                   Handlers.postClientR_w
                   w1
                   ww1
                   ww2
                   w3 }) -}
80fd898f687f685bea6cba8e32ef9ecf
  postClientR7 :: [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   Handlers.postClientR8
                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)) -}
53d0b836ecabc2f7673f5eeb5a08c308
  postClientR8 ::
    (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
  {- Unfolding: ((Handlers.getHistoricoVagaValorR2,
                  Handlers.postAvulsoR9)) -}
bc5b46530b54b19bf58b617989ee874e
  postClientR9 ::
    Foundation.Client
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Client)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Client
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityClient) -}
0903196d2db8b0e74e0fc8e6e35a1539
  postClientR_w :: [GHC.Types.Char]
  {- Unfolding: (case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        Handlers.postClientR7
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 case Data.Text.Internal.Builder.$wtoLazyTextWith
                        112
                        (Data.Aeson.Encode.encodeToTextBuilder
                           (Data.Aeson.Types.Internal.Object dt)) of dt1 { DEFAULT ->
                 Yesod.Core.Content.$wunfold dt1 0 } }) -}
96b7ff94f6d0b83c0880b72a0f4bfd96
  postContratoR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postContratoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
3ad80d33b77befae5154c61bba160cc6
  postContratoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postContratoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Contrato>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Contrato>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Contrato)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.Contrato)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postContratoR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
303757f1585c37ef2fc97c8df7e1651d
  postContratoR2 ::
    Foundation.Contrato
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Contrato)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Contrato
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityContrato) -}
e0886a397e326b18de6c48ebb29e98bc
  postContratoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.Contrato
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Contrato
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONContrato_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.Contrato>_N))) -}
37f48cee01598d7e5d8357833dab883c
  postConveniadoR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postConveniadoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
6d559a8fe27daa49273e94aa29f4b5fa
  postConveniadoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postConveniadoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Conveniado>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Conveniado>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Conveniado)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.Conveniado)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postConveniadoR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
77ec1a1054a1cb3fe9d30b6713871117
  postConveniadoR2 ::
    Foundation.Conveniado
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Conveniado)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Conveniado
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityConveniado) -}
ef6e2cdf392d4ca01abe241ae4356c01
  postConveniadoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.Conveniado
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Conveniado
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONConveniado_$cparseJSON
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.Conveniado>_N))) -}
9164c40de86738317b5fa0ff258d3cc1
  postEventoR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postEventoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
01a99aa5fd7c0b76f207bb655eead3c8
  postEventoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postEventoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Evento>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Evento>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Evento)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.Evento)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postEventoR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
8e04141db939a4a0264e65d6042378ef
  postEventoR2 ::
    Foundation.Evento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Evento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Evento
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityEvento) -}
cecb512b25364f0b9f79d7135bef7b61
  postEventoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.Evento
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Evento
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONEntity8_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.Evento>_N))) -}
4ede2341fca48a632065ebf8bb69389b
  postFuncionarioR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postFuncionarioR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
a0f7f8b47788bcc8b2c4e7b64b4d0cae
  postFuncionarioR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postFuncionarioR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Funcionario>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Funcionario>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postFuncionarioR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
dd0f1709de7d7403eeab1f24c80a307e
  postFuncionarioR2 ::
    Foundation.Funcionario
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Funcionario
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityFuncionario) -}
7341cf4826c0ee28cef12d9da1fd9768
  postFuncionarioR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.Funcionario
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Funcionario
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONEntity0_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.Funcionario>_N))) -}
2029c1e66085a3689c28c4364b684284
  postHistoricoVagaValorR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postHistoricoVagaValorR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
3c2515dcad1f37318de0b06492f4a77a
  postHistoricoVagaValorR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postHistoricoVagaValorR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <Foundation.HistoricoVagaValor>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.HistoricoVagaValor>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key
                             Foundation.HistoricoVagaValor)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key
                                Foundation.HistoricoVagaValor)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postHistoricoVagaValorR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
4d3de3b5aee659eee945948e2656a1f2
  postHistoricoVagaValorR2 ::
    Foundation.HistoricoVagaValor
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key
            Foundation.HistoricoVagaValor)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.HistoricoVagaValor
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityHistoricoVagaValor) -}
51ae9653acbb5d1d2c27c9564923c250
  postHistoricoVagaValorR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.HistoricoVagaValor
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.HistoricoVagaValor
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONEntity_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.HistoricoVagaValor>_N))) -}
3db725024aa0153e266f2752cad8ec75
  postTipoVeiculoR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postTipoVeiculoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
032ff1440a329e147666f7d240e93ab6
  postTipoVeiculoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postTipoVeiculoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.TipoVeiculo>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.TipoVeiculo>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoVeiculo)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoVeiculo)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postTipoVeiculoR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
927c273ade4c848222ab5a316d956bd8
  postTipoVeiculoR2 ::
    Foundation.TipoVeiculo
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.TipoVeiculo)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.TipoVeiculo
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityTipoVeiculo) -}
9fc5e0dd12b2debcf39cb7b55409806a
  postTipoVeiculoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.TipoVeiculo
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.TipoVeiculo
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONEntity7_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.TipoVeiculo>_N))) -}
0e3419b2c82beb9b3b2896fdfb6ca804
  postVagaR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postVagaR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
2b45f4f8bd5bec5a9861f3d993f12491
  postVagaR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postVagaR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Vaga>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Vaga>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Vaga)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.Vaga)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postVagaR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
a702e11405b5f258275feedac80d4000
  postVagaR2 ::
    Foundation.Vaga
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Vaga)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Vaga
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityVaga) -}
6df1398fa8dbb4c9f73a5e932f198883
  postVagaR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.Vaga
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Vaga
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONEntity4_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.Vaga>_N))) -}
b00fe18d3fb4c32337af94fe76db7849
  postVagaValorR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postVagaValorR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
aa4fa23b850753e0d11412c2dfa163a4
  postVagaValorR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postVagaValorR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.VagaValor>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.VagaValor>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.VagaValor)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.VagaValor)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postVagaValorR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
b0acb243881ee5829237434eed04c80a
  postVagaValorR2 ::
    Foundation.VagaValor
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.VagaValor)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.VagaValor
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityVagaValor) -}
569e7266d7fac17931c87f692c6100e6
  postVagaValorR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.VagaValor
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.VagaValor
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONEntity5_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.VagaValor>_N))) -}
3a3c9475f1dcb5f9124464932a2243f1
  postVeiculoR :: Foundation.Handler ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postVeiculoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
5f28d04e865575a685fce5b16427b52f
  postVeiculoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postVeiculoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Veiculo>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Veiculo>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Veiculo)
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ (Database.Persist.Class.PersistEntity.Key Foundation.Veiculo)
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.postVeiculoR2 ipv1))
                        r
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.postAvulsoR2
                   ipv4 } } }) -}
7400ac41f87b0865e8396e852b3decb6
  postVeiculoR2 ::
    Foundation.Veiculo
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Veiculo)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Veiculo
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityVeiculo) -}
74e5584dddefda0b1d6fbb342347ac35
  postVeiculoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Foundation.Veiculo
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Veiculo
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Foundation.$fFromJSONEntity6_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                             <Foundation.Veiculo>_N))) -}
ff5b55e19fdb1157b401f61fe00d28cf
  putTipoVeiUpdateR ::
    Foundation.TipoVeiculoId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.putTipoVeiUpdateR1
                  `cast`
                (<Foundation.TipoVeiculoId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
a8e8694619a2e7ab975b8aa594134861
  putTipoVeiUpdateR1 ::
    Foundation.TipoVeiculoId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ tvid :: Foundation.TipoVeiculoId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postTipoVeiculoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.TipoVeiculo>_N)
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.TipoVeiculo>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.putTipoVeiUpdateR11
                              tvid
                              (GHC.Types.:
                                 @ (Database.Persist.Class.PersistEntity.Update
                                      Foundation.TipoVeiculo)
                                 (Database.Persist.Class.PersistEntity.Update
                                    @ Foundation.TipoVeiculo
                                    @ Data.Text.Internal.Text
                                    Database.Persist.Class.PersistField.$fPersistFieldText0
                                    Handlers.putTipoVeiUpdateR10
                                      `cast`
                                    (Sub (Sym (Foundation.TFCo:R:EntityFieldTipoVeiculotyp[0])) <Data.Text.Internal.Text>_N)
                                    (case ipv1 of wild { Foundation.TipoVeiculo ds3 -> ds3 })
                                    Database.Persist.Types.Base.Assign)
                                 (GHC.Types.[]
                                    @ (Database.Persist.Class.PersistEntity.Update
                                         Foundation.TipoVeiculo)))))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.putTipoVeiUpdateR2
                   ipv4 } } }) -}
0a07eaf599239bc7e1054884dccbcbad
  putTipoVeiUpdateR10 ::
    Foundation.R:EntityFieldTipoVeiculotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.TipoVeiculoNome
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
84470550978ff9ef91ff0c120a73bea3
  putTipoVeiUpdateR11 ::
    Database.Persist.Class.PersistEntity.Key Foundation.TipoVeiculo
    -> [Database.Persist.Class.PersistEntity.Update
          Foundation.TipoVeiculo]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         ()
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cupdate
                   @ Foundation.TipoVeiculo
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityTipoVeiculo) -}
f54fd33380c63ce3c5b39a90c9490b1a
  putTipoVeiUpdateR2 :: GHC.Exception.SomeException
  {- Unfolding: (Yesod.Core.Types.$fExceptionHandlerContents_$ctoException
                   Handlers.putTipoVeiUpdateR3) -}
dc9ee369a266b979966bf1e3b4d68abd
  putTipoVeiUpdateR3 :: Yesod.Core.Types.HandlerContents
  {- Unfolding: (case Yesod.Core.Content.typeJson of dt { Data.ByteString.Internal.PS ipv ipv1 ipv2 ipv3 ->
                 Yesod.Core.Types.HCContent
                   Network.HTTP.Types.Status.status200
                   Handlers.putTipoVeiUpdateR4 }) -}
937ed5819cfaa5d9d1854dce8336afe6
  putTipoVeiUpdateR4 :: Yesod.Core.Types.TypedContent
  {- Unfolding: (Yesod.Core.Types.TypedContent
                   Yesod.Core.Content.typeJson
                   Handlers.putTipoVeiUpdateR5) -}
19cace83bbadf5b945120c060df7b921
  putTipoVeiUpdateR5 :: Yesod.Core.Types.Content
  {- Unfolding: (Yesod.Core.Types.ContentBuilder
                   Handlers.putTipoVeiUpdateR6
                     `cast`
                   (Trans
                        (forall r.
                         <Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                        (Sym (Data.ByteString.Builder.Internal.NTCo:Builder[0])))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
b81fd2f89a412dada1874ae5a93dd846
  putTipoVeiUpdateR6 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (\ @ r
                   w1 :: Data.ByteString.Builder.Internal.BufferRange
                         -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                   w2 :: Data.ByteString.Builder.Internal.BufferRange
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Yesod.Core.Content.$fToTypedContentValue2
                   @ r
                   Handlers.putTipoVeiUpdateR_w
                   w1
                   ww1
                   ww2
                   w3 }) -}
1972da5d241b1adc0e61d0ba77c21166
  putTipoVeiUpdateR7 :: [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   Handlers.putTipoVeiUpdateR8
                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)) -}
7a93483df6b75e402cb265b6f6fa0d45
  putTipoVeiUpdateR8 ::
    (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
  {- Unfolding: ((Handlers.deleteDeleteFuncionarioR10,
                  Handlers.putTipoVeiUpdateR9)) -}
de43ebc4e17ba7a3e7c41f82bb496972
  putTipoVeiUpdateR9 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "UPDATED"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
c4bb349d5819bd5d559d14e2db92fead
  putTipoVeiUpdateR_w :: [GHC.Types.Char]
  {- Unfolding: (case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        Handlers.putTipoVeiUpdateR7
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 case Data.Text.Internal.Builder.$wtoLazyTextWith
                        112
                        (Data.Aeson.Encode.encodeToTextBuilder
                           (Data.Aeson.Types.Internal.Object dt)) of dt1 { DEFAULT ->
                 Yesod.Core.Content.$wunfold dt1 0 } }) -}
ab98679dee146844249ea14d656c3614
  putUpdateFuncionarioR ::
    Foundation.FuncionarioId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.putUpdateFuncionarioR1
                  `cast`
                (<Foundation.FuncionarioId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
2ca52c2f80065495a2b6e2c180726e3b
  putUpdateFuncionarioR1 ::
    Foundation.FuncionarioId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ pid :: Foundation.FuncionarioId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postFuncionarioR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Funcionario>_N)
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Funcionario>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.putUpdateFuncionarioR4
                              pid
                              (GHC.Types.:
                                 @ (Database.Persist.Class.PersistEntity.Update
                                      Foundation.Funcionario)
                                 (Database.Persist.Class.PersistEntity.Update
                                    @ Foundation.Funcionario
                                    @ Data.Text.Internal.Text
                                    Database.Persist.Class.PersistField.$fPersistFieldText0
                                    Handlers.putUpdateFuncionarioR3
                                      `cast`
                                    (Sub (Sym (Foundation.TFCo:R:EntityFieldFuncionariotyp[0])) <Data.Text.Internal.Text>_N)
                                    (case ipv1 of wild { Foundation.Funcionario ds3 ds4 ds5 ->
                                     ds4 })
                                    Database.Persist.Types.Base.Assign)
                                 (GHC.Types.:
                                    @ (Database.Persist.Class.PersistEntity.Update
                                         Foundation.Funcionario)
                                    (Database.Persist.Class.PersistEntity.Update
                                       @ Foundation.Funcionario
                                       @ Data.Text.Internal.Text
                                       Database.Persist.Class.PersistField.$fPersistFieldText0
                                       Handlers.putUpdateFuncionarioR2
                                         `cast`
                                       (Sub (Sym (Foundation.TFCo:R:EntityFieldFuncionariotyp[0])) <Data.Text.Internal.Text>_N)
                                       (case ipv1 of wild { Foundation.Funcionario ds3 ds4 ds5 ->
                                        ds5 })
                                       Database.Persist.Types.Base.Assign)
                                    (GHC.Types.[]
                                       @ (Database.Persist.Class.PersistEntity.Update
                                            Foundation.Funcionario))))))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.putTipoVeiUpdateR2
                   ipv4 } } }) -}
86b9ad3a3d789d3fb5bf77e46d9f6940
  putUpdateFuncionarioR2 ::
    Foundation.R:EntityFieldFuncionariotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.FuncionarioAtivo
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
39fd0a294cc3e7b20042cd276d2a0b1b
  putUpdateFuncionarioR3 ::
    Foundation.R:EntityFieldFuncionariotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.FuncionarioSenha
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
676557da0c74e8d4582aae6fa571a09b
  putUpdateFuncionarioR4 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> [Database.Persist.Class.PersistEntity.Update
          Foundation.Funcionario]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         ()
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cupdate
                   @ Foundation.Funcionario
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityFuncionario) -}
c1310fdc3f1bd97b3c06e2cc45698645
  putUpdateR :: Foundation.ClientId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.putUpdateR1
                  `cast`
                (<Foundation.ClientId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
41d6031db981e095fcdc039fcbb7b289
  putUpdateR1 ::
    Foundation.ClientId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ pid :: Foundation.ClientId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postClientR10
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Client>_N)
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Client>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.putUpdateR15
                              pid
                              (GHC.Types.:
                                 @ (Database.Persist.Class.PersistEntity.Update Foundation.Client)
                                 (Database.Persist.Class.PersistEntity.Update
                                    @ Foundation.Client
                                    @ Data.Text.Internal.Text
                                    Database.Persist.Class.PersistField.$fPersistFieldText0
                                    Handlers.putUpdateR14
                                      `cast`
                                    (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                    (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                     ds3 })
                                    Database.Persist.Types.Base.Assign)
                                 (GHC.Types.:
                                    @ (Database.Persist.Class.PersistEntity.Update
                                         Foundation.Client)
                                    (Database.Persist.Class.PersistEntity.Update
                                       @ Foundation.Client
                                       @ Data.Text.Internal.Text
                                       Database.Persist.Class.PersistField.$fPersistFieldText0
                                       Handlers.putUpdateR13
                                         `cast`
                                       (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                       (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                        ds4 })
                                       Database.Persist.Types.Base.Assign)
                                    (GHC.Types.:
                                       @ (Database.Persist.Class.PersistEntity.Update
                                            Foundation.Client)
                                       (Database.Persist.Class.PersistEntity.Update
                                          @ Foundation.Client
                                          @ Data.Text.Internal.Text
                                          Database.Persist.Class.PersistField.$fPersistFieldText0
                                          Handlers.putUpdateR12
                                            `cast`
                                          (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                          (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                           ds5 })
                                          Database.Persist.Types.Base.Assign)
                                       (GHC.Types.:
                                          @ (Database.Persist.Class.PersistEntity.Update
                                               Foundation.Client)
                                          (Database.Persist.Class.PersistEntity.Update
                                             @ Foundation.Client
                                             @ Data.Text.Internal.Text
                                             Database.Persist.Class.PersistField.$fPersistFieldText0
                                             Handlers.putUpdateR11
                                               `cast`
                                             (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                             (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                              ds6 })
                                             Database.Persist.Types.Base.Assign)
                                          (GHC.Types.:
                                             @ (Database.Persist.Class.PersistEntity.Update
                                                  Foundation.Client)
                                             (Database.Persist.Class.PersistEntity.Update
                                                @ Foundation.Client
                                                @ Data.Text.Internal.Text
                                                Database.Persist.Class.PersistField.$fPersistFieldText0
                                                Handlers.putUpdateR10
                                                  `cast`
                                                (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                 ds7 })
                                                Database.Persist.Types.Base.Assign)
                                             (GHC.Types.:
                                                @ (Database.Persist.Class.PersistEntity.Update
                                                     Foundation.Client)
                                                (Database.Persist.Class.PersistEntity.Update
                                                   @ Foundation.Client
                                                   @ Data.Text.Internal.Text
                                                   Database.Persist.Class.PersistField.$fPersistFieldText0
                                                   Handlers.putUpdateR9
                                                     `cast`
                                                   (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                   (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                    ds8 })
                                                   Database.Persist.Types.Base.Assign)
                                                (GHC.Types.:
                                                   @ (Database.Persist.Class.PersistEntity.Update
                                                        Foundation.Client)
                                                   (Database.Persist.Class.PersistEntity.Update
                                                      @ Foundation.Client
                                                      @ Data.Text.Internal.Text
                                                      Database.Persist.Class.PersistField.$fPersistFieldText0
                                                      Handlers.putUpdateR8
                                                        `cast`
                                                      (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                      (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                       ds9 })
                                                      Database.Persist.Types.Base.Assign)
                                                   (GHC.Types.:
                                                      @ (Database.Persist.Class.PersistEntity.Update
                                                           Foundation.Client)
                                                      (Database.Persist.Class.PersistEntity.Update
                                                         @ Foundation.Client
                                                         @ Data.Text.Internal.Text
                                                         Database.Persist.Class.PersistField.$fPersistFieldText0
                                                         Handlers.putUpdateR7
                                                           `cast`
                                                         (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                         (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                          ds10 })
                                                         Database.Persist.Types.Base.Assign)
                                                      (GHC.Types.:
                                                         @ (Database.Persist.Class.PersistEntity.Update
                                                              Foundation.Client)
                                                         (Database.Persist.Class.PersistEntity.Update
                                                            @ Foundation.Client
                                                            @ Data.Text.Internal.Text
                                                            Database.Persist.Class.PersistField.$fPersistFieldText0
                                                            Handlers.putUpdateR6
                                                              `cast`
                                                            (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                            (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                             ds11 })
                                                            Database.Persist.Types.Base.Assign)
                                                         (GHC.Types.:
                                                            @ (Database.Persist.Class.PersistEntity.Update
                                                                 Foundation.Client)
                                                            (Database.Persist.Class.PersistEntity.Update
                                                               @ Foundation.Client
                                                               @ Data.Text.Internal.Text
                                                               Database.Persist.Class.PersistField.$fPersistFieldText0
                                                               Handlers.putUpdateR5
                                                                 `cast`
                                                               (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                               (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                                ds12 })
                                                               Database.Persist.Types.Base.Assign)
                                                            (GHC.Types.:
                                                               @ (Database.Persist.Class.PersistEntity.Update
                                                                    Foundation.Client)
                                                               (Database.Persist.Class.PersistEntity.Update
                                                                  @ Foundation.Client
                                                                  @ Data.Text.Internal.Text
                                                                  Database.Persist.Class.PersistField.$fPersistFieldText0
                                                                  Handlers.putUpdateR4
                                                                    `cast`
                                                                  (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                                  (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                                   ds13 })
                                                                  Database.Persist.Types.Base.Assign)
                                                               (GHC.Types.:
                                                                  @ (Database.Persist.Class.PersistEntity.Update
                                                                       Foundation.Client)
                                                                  (Database.Persist.Class.PersistEntity.Update
                                                                     @ Foundation.Client
                                                                     @ Data.Text.Internal.Text
                                                                     Database.Persist.Class.PersistField.$fPersistFieldText0
                                                                     Handlers.putUpdateR3
                                                                       `cast`
                                                                     (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                                     (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                                      ds14 })
                                                                     Database.Persist.Types.Base.Assign)
                                                                  (GHC.Types.:
                                                                     @ (Database.Persist.Class.PersistEntity.Update
                                                                          Foundation.Client)
                                                                     (Database.Persist.Class.PersistEntity.Update
                                                                        @ Foundation.Client
                                                                        @ Data.Text.Internal.Text
                                                                        Database.Persist.Class.PersistField.$fPersistFieldText0
                                                                        Handlers.putUpdateR2
                                                                          `cast`
                                                                        (Sub (Sym (Foundation.TFCo:R:EntityFieldClienttyp[0])) <Data.Text.Internal.Text>_N)
                                                                        (case ipv1 of wild { Foundation.Client ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ->
                                                                         ds15 })
                                                                        Database.Persist.Types.Base.Assign)
                                                                     (GHC.Types.[]
                                                                        @ (Database.Persist.Class.PersistEntity.Update
                                                                             Foundation.Client)))))))))))))))))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.putTipoVeiUpdateR2
                   ipv4 } } }) -}
eb42e6fa022c075a8547ed23899cac6f
  putUpdateR10 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientSexo
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
ed2cb4a891a7e85ea1a9b9bf1d9f4b44
  putUpdateR11 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientRg
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
95b57abb8d0948280e092ed7cbddff9b
  putUpdateR12 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientTelefone
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
7ab9b0ebb22903a92905d8db921ec451
  putUpdateR13 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientFlcliente
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
1b9cb97f47b470a95ec332ee5748417a
  putUpdateR14 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientNome
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
bd08d61c390ec1e1ffc17d1d7641d993
  putUpdateR15 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Client
    -> [Database.Persist.Class.PersistEntity.Update Foundation.Client]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         ()
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cupdate
                   @ Foundation.Client
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityClient) -}
f68639a3455855758573039986a91a4d
  putUpdateR2 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientRazaosocial
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
f404e955fdb703f9ddfc3b5fa19b827a
  putUpdateR3 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientCnpj
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
a7bc77ec789bea6b59b0a9bf783acf0d
  putUpdateR4 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientCep
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
6dfca3007300ed346c9e1933f5d6cea0
  putUpdateR5 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientBairro
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
5f31ed65d166ebb375d2558ee432b1f1
  putUpdateR6 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientEstado
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
e4e96f82452fbf054864195480b1ae39
  putUpdateR7 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientCidade
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
8f63577bfa6c5628dfb6992827882b95
  putUpdateR8 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientLogradouro
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
f98fc464c86a103b384a6b35d4ae9887
  putUpdateR9 ::
    Foundation.R:EntityFieldClienttyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClientCpf
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
dd88b614d34b3241f556efc738ca35f7
  putUpdateVagaR :: Foundation.VagaId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.putUpdateVagaR1
                  `cast`
                (<Foundation.VagaId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
ecf485f06fdc1a18f1367767ebc5565c
  putUpdateVagaR1 ::
    Foundation.VagaId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ pid :: Foundation.VagaId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postVagaR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Vaga>_N)
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Vaga>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.putUpdateVagaR5
                              pid
                              (GHC.Types.:
                                 @ (Database.Persist.Class.PersistEntity.Update Foundation.Vaga)
                                 (Database.Persist.Class.PersistEntity.Update
                                    @ Foundation.Vaga
                                    @ Data.Text.Internal.Text
                                    Database.Persist.Class.PersistField.$fPersistFieldText0
                                    Handlers.putUpdateVagaR4
                                      `cast`
                                    (Sub (Sym (Foundation.TFCo:R:EntityFieldVagatyp[0])) <Data.Text.Internal.Text>_N)
                                    (case ipv1 of wild { Foundation.Vaga ds3 ds4 ds5 -> ds3 })
                                    Database.Persist.Types.Base.Assign)
                                 (GHC.Types.:
                                    @ (Database.Persist.Class.PersistEntity.Update Foundation.Vaga)
                                    (Database.Persist.Class.PersistEntity.Update
                                       @ Foundation.Vaga
                                       @ Data.Text.Internal.Text
                                       Database.Persist.Class.PersistField.$fPersistFieldText0
                                       Handlers.putUpdateVagaR3
                                         `cast`
                                       (Sub (Sym (Foundation.TFCo:R:EntityFieldVagatyp[0])) <Data.Text.Internal.Text>_N)
                                       (case ipv1 of wild { Foundation.Vaga ds3 ds4 ds5 -> ds4 })
                                       Database.Persist.Types.Base.Assign)
                                    (GHC.Types.:
                                       @ (Database.Persist.Class.PersistEntity.Update
                                            Foundation.Vaga)
                                       (Database.Persist.Class.PersistEntity.Update
                                          @ Foundation.Vaga
                                          @ (Database.Persist.Class.PersistEntity.Key
                                               Foundation.VagaValor)
                                          Foundation.$fPersistFieldKey5
                                          Handlers.putUpdateVagaR2
                                            `cast`
                                          (Sub (Sym (Foundation.TFCo:R:EntityFieldVagatyp[0])) <Database.Persist.Class.PersistEntity.Key
                                                                                                  Foundation.VagaValor>_N)
                                          (case ipv1 of wild { Foundation.Vaga ds3 ds4 ds5 -> ds5 })
                                          Database.Persist.Types.Base.Assign)
                                       (GHC.Types.[]
                                          @ (Database.Persist.Class.PersistEntity.Update
                                               Foundation.Vaga)))))))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.putTipoVeiUpdateR2
                   ipv4 } } }) -}
183b4d9bcf14c30c541261c718b720c4
  putUpdateVagaR2 ::
    Foundation.R:EntityFieldVagatyp
      (Database.Persist.Class.PersistEntity.Key Foundation.VagaValor)
  {- HasNoCafRefs,
     Unfolding: (Foundation.VagaVagavalorid
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.VagaValor)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.VagaValor>_N) -}
0fbe709e588e88c7cb0df7d69dfe92e9
  putUpdateVagaR3 ::
    Foundation.R:EntityFieldVagatyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VagaNoturno
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
f1bf4eb9c1cefbcdd09e28d8e0574f40
  putUpdateVagaR4 ::
    Foundation.R:EntityFieldVagatyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VagaDiurno
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
59306354c5d9f0272b625d76b2500e2b
  putUpdateVagaR5 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Vaga
    -> [Database.Persist.Class.PersistEntity.Update Foundation.Vaga]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         ()
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cupdate
                   @ Foundation.Vaga
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityVaga) -}
3caa5816e235dff84a16eb44a893e20b
  putUpdateVagaValorR ::
    Foundation.VagaValorId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.putUpdateVagaValorR1
                  `cast`
                (<Foundation.VagaValorId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
af07eac0b19a50e695ba1a9bf167da24
  putUpdateVagaValorR1 ::
    Foundation.VagaValorId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ pid :: Foundation.VagaValorId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postVagaValorR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.VagaValor>_N)
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.VagaValor>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.putUpdateVagaValorR5
                              pid
                              (GHC.Types.:
                                 @ (Database.Persist.Class.PersistEntity.Update
                                      Foundation.VagaValor)
                                 (Database.Persist.Class.PersistEntity.Update
                                    @ Foundation.VagaValor
                                    @ GHC.Types.Double
                                    Database.Persist.Class.PersistField.$fPersistFieldDouble
                                    Handlers.putUpdateVagaValorR4
                                      `cast`
                                    (Sub (Sym (Foundation.TFCo:R:EntityFieldVagaValortyp[0])) <GHC.Types.Double>_N)
                                    (case ipv1 of wild { Foundation.VagaValor dt dt1 ds3 ->
                                     GHC.Types.D# dt })
                                    Database.Persist.Types.Base.Assign)
                                 (GHC.Types.:
                                    @ (Database.Persist.Class.PersistEntity.Update
                                         Foundation.VagaValor)
                                    (Database.Persist.Class.PersistEntity.Update
                                       @ Foundation.VagaValor
                                       @ GHC.Types.Double
                                       Database.Persist.Class.PersistField.$fPersistFieldDouble
                                       Handlers.putUpdateVagaValorR3
                                         `cast`
                                       (Sub (Sym (Foundation.TFCo:R:EntityFieldVagaValortyp[0])) <GHC.Types.Double>_N)
                                       (case ipv1 of wild { Foundation.VagaValor dt dt1 ds3 ->
                                        GHC.Types.D# dt1 })
                                       Database.Persist.Types.Base.Assign)
                                    (GHC.Types.:
                                       @ (Database.Persist.Class.PersistEntity.Update
                                            Foundation.VagaValor)
                                       (Database.Persist.Class.PersistEntity.Update
                                          @ Foundation.VagaValor
                                          @ (Database.Persist.Class.PersistEntity.Key
                                               Foundation.Funcionario)
                                          Foundation.$fPersistFieldKey0
                                          Handlers.putUpdateVagaValorR2
                                            `cast`
                                          (Sub (Sym (Foundation.TFCo:R:EntityFieldVagaValortyp[0])) <Database.Persist.Class.PersistEntity.Key
                                                                                                       Foundation.Funcionario>_N)
                                          (case ipv1 of wild { Foundation.VagaValor dt dt1 ds3 ->
                                           ds3 })
                                          Database.Persist.Types.Base.Assign)
                                       (GHC.Types.[]
                                          @ (Database.Persist.Class.PersistEntity.Update
                                               Foundation.VagaValor)))))))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.putTipoVeiUpdateR2
                   ipv4 } } }) -}
941921191d6cc7dbe3ee4c435c8cfb2a
  putUpdateVagaValorR2 ::
    Foundation.R:EntityFieldVagaValortyp
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- HasNoCafRefs,
     Unfolding: (Foundation.VagaValorFuncionarioid
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Funcionario>_N) -}
7cad7039820a0c09f524e2554bfcaacc
  putUpdateVagaValorR3 ::
    Foundation.R:EntityFieldVagaValortyp GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Foundation.VagaValorValornoturno
                   @ GHC.Types.Double
                   @~ <GHC.Types.Double>_N) -}
8265065b69ecd55561d1655237312a99
  putUpdateVagaValorR4 ::
    Foundation.R:EntityFieldVagaValortyp GHC.Types.Double
  {- HasNoCafRefs,
     Unfolding: (Foundation.VagaValorValordiurno
                   @ GHC.Types.Double
                   @~ <GHC.Types.Double>_N) -}
5ef8a2f1f0414e245c76a01fba9583aa
  putUpdateVagaValorR5 ::
    Database.Persist.Class.PersistEntity.Key Foundation.VagaValor
    -> [Database.Persist.Class.PersistEntity.Update
          Foundation.VagaValor]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         ()
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cupdate
                   @ Foundation.VagaValor
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityVagaValor) -}
04b932f67fb7fdce498ab221697f1d14
  putVeiUpdateR :: Foundation.VeiculoId -> Foundation.Handler ()
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.putVeiUpdateR1
                  `cast`
                (<Foundation.VeiculoId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))) -}
15ca7e6ef6594cac36c29f1a8b139dab
  putVeiUpdateR1 ::
    Foundation.VeiculoId
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ vid :: Foundation.VeiculoId
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postVeiculoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Foundation.Veiculo>_N)
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Veiculo>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ ()
                        (case ipv3 of wild { Foundation.Sitio ds -> ds })
                        (Database.Persist.Sql.Run.runSqlConn
                           @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                           @ ()
                           Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                           (Handlers.putVeiUpdateR9
                              vid
                              (GHC.Types.:
                                 @ (Database.Persist.Class.PersistEntity.Update Foundation.Veiculo)
                                 (Database.Persist.Class.PersistEntity.Update
                                    @ Foundation.Veiculo
                                    @ Data.Text.Internal.Text
                                    Database.Persist.Class.PersistField.$fPersistFieldText0
                                    Handlers.putVeiUpdateR8
                                      `cast`
                                    (Sub (Sym (Foundation.TFCo:R:EntityFieldVeiculotyp[0])) <Data.Text.Internal.Text>_N)
                                    (case ipv1 of wild { Foundation.Veiculo ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                                     ds3 })
                                    Database.Persist.Types.Base.Assign)
                                 (GHC.Types.:
                                    @ (Database.Persist.Class.PersistEntity.Update
                                         Foundation.Veiculo)
                                    (Database.Persist.Class.PersistEntity.Update
                                       @ Foundation.Veiculo
                                       @ Data.Text.Internal.Text
                                       Database.Persist.Class.PersistField.$fPersistFieldText0
                                       Handlers.putVeiUpdateR7
                                         `cast`
                                       (Sub (Sym (Foundation.TFCo:R:EntityFieldVeiculotyp[0])) <Data.Text.Internal.Text>_N)
                                       (case ipv1 of wild { Foundation.Veiculo ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                                        ds4 })
                                       Database.Persist.Types.Base.Assign)
                                    (GHC.Types.:
                                       @ (Database.Persist.Class.PersistEntity.Update
                                            Foundation.Veiculo)
                                       (Database.Persist.Class.PersistEntity.Update
                                          @ Foundation.Veiculo
                                          @ Data.Text.Internal.Text
                                          Database.Persist.Class.PersistField.$fPersistFieldText0
                                          Handlers.putVeiUpdateR6
                                            `cast`
                                          (Sub (Sym (Foundation.TFCo:R:EntityFieldVeiculotyp[0])) <Data.Text.Internal.Text>_N)
                                          (case ipv1 of wild { Foundation.Veiculo ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                                           ds5 })
                                          Database.Persist.Types.Base.Assign)
                                       (GHC.Types.:
                                          @ (Database.Persist.Class.PersistEntity.Update
                                               Foundation.Veiculo)
                                          (Database.Persist.Class.PersistEntity.Update
                                             @ Foundation.Veiculo
                                             @ Data.Text.Internal.Text
                                             Database.Persist.Class.PersistField.$fPersistFieldText0
                                             Handlers.putVeiUpdateR5
                                               `cast`
                                             (Sub (Sym (Foundation.TFCo:R:EntityFieldVeiculotyp[0])) <Data.Text.Internal.Text>_N)
                                             (case ipv1 of wild { Foundation.Veiculo ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                                              ds6 })
                                             Database.Persist.Types.Base.Assign)
                                          (GHC.Types.:
                                             @ (Database.Persist.Class.PersistEntity.Update
                                                  Foundation.Veiculo)
                                             (Database.Persist.Class.PersistEntity.Update
                                                @ Foundation.Veiculo
                                                @ Data.Text.Internal.Text
                                                Database.Persist.Class.PersistField.$fPersistFieldText0
                                                Handlers.putVeiUpdateR4
                                                  `cast`
                                                (Sub (Sym (Foundation.TFCo:R:EntityFieldVeiculotyp[0])) <Data.Text.Internal.Text>_N)
                                                (case ipv1 of wild { Foundation.Veiculo ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                                                 ds7 })
                                                Database.Persist.Types.Base.Assign)
                                             (GHC.Types.:
                                                @ (Database.Persist.Class.PersistEntity.Update
                                                     Foundation.Veiculo)
                                                (Database.Persist.Class.PersistEntity.Update
                                                   @ Foundation.Veiculo
                                                   @ (Database.Persist.Class.PersistEntity.Key
                                                        Foundation.TipoVeiculo)
                                                   Foundation.$fPersistFieldKey7
                                                   Handlers.putVeiUpdateR3
                                                     `cast`
                                                   (Sub (Sym (Foundation.TFCo:R:EntityFieldVeiculotyp[0])) <Database.Persist.Class.PersistEntity.Key
                                                                                                              Foundation.TipoVeiculo>_N)
                                                   (case ipv1 of wild { Foundation.Veiculo ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                                                    ds8 })
                                                   Database.Persist.Types.Base.Assign)
                                                (GHC.Types.:
                                                   @ (Database.Persist.Class.PersistEntity.Update
                                                        Foundation.Veiculo)
                                                   (Database.Persist.Class.PersistEntity.Update
                                                      @ Foundation.Veiculo
                                                      @ (Database.Persist.Class.PersistEntity.Key
                                                           Foundation.Client)
                                                      Foundation.$fPersistFieldKey11
                                                      Handlers.putVeiUpdateR2
                                                        `cast`
                                                      (Sub (Sym (Foundation.TFCo:R:EntityFieldVeiculotyp[0])) <Database.Persist.Class.PersistEntity.Key
                                                                                                                 Foundation.Client>_N)
                                                      (case ipv1 of wild { Foundation.Veiculo ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                                                       ds9 })
                                                      Database.Persist.Types.Base.Assign)
                                                   (GHC.Types.[]
                                                      @ (Database.Persist.Class.PersistEntity.Update
                                                           Foundation.Veiculo)))))))))))
                        eta
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.Prim.raiseIO#
                   @ GHC.Exception.SomeException
                   @ ()
                   Handlers.putTipoVeiUpdateR2
                   ipv4 } } }) -}
e88feb25194aa875e2c8dc57a08cedce
  putVeiUpdateR2 ::
    Foundation.R:EntityFieldVeiculotyp
      (Database.Persist.Class.PersistEntity.Key Foundation.Client)
  {- HasNoCafRefs,
     Unfolding: (Foundation.VeiculoClienteid
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Client)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Client>_N) -}
4c5d19b9398f8ec09b4f4220effd5cca
  putVeiUpdateR3 ::
    Foundation.R:EntityFieldVeiculotyp
      (Database.Persist.Class.PersistEntity.Key Foundation.TipoVeiculo)
  {- HasNoCafRefs,
     Unfolding: (Foundation.VeiculoTipoveiculoid
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.TipoVeiculo)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.TipoVeiculo>_N) -}
45cdfedecfee33aef60144839216238d
  putVeiUpdateR4 ::
    Foundation.R:EntityFieldVeiculotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VeiculoCor
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
cf62c10661178f5815e3bc5ef7584f20
  putVeiUpdateR5 ::
    Foundation.R:EntityFieldVeiculotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VeiculoAno
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
620abb7c0571191ee206c45cc951b397
  putVeiUpdateR6 ::
    Foundation.R:EntityFieldVeiculotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VeiculoMarca
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
6c3eb251eee7f8eaa0dbc05b0dcd343d
  putVeiUpdateR7 ::
    Foundation.R:EntityFieldVeiculotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VeiculoDescricao
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
cd778c350dabb757a5ef9fa72dd6f5c4
  putVeiUpdateR8 ::
    Foundation.R:EntityFieldVeiculotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.VeiculoPlaca
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
0d578d55299741544a7abd2a83ca8e16
  putVeiUpdateR9 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Veiculo
    -> [Database.Persist.Class.PersistEntity.Update Foundation.Veiculo]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         ()
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cupdate
                   @ Foundation.Veiculo
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityVeiculo) -}
instance Yesod.Core.Class.Dispatch.YesodDispatch [Foundation.Sitio]
  = Handlers.$fYesodDispatchSitio
"SPEC/Handlers $fApplicativeWidgetT @ Sitio @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                 (Yesod.Core.Types.WidgetT
                                                                                    Foundation.Sitio
                                                                                    GHC.Types.IO)
                                                                  $dMonad :: GHC.Base.Monad
                                                                               GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT @ Foundation.Sitio
                                        @ GHC.Types.IO
                                        $dFunctor
                                        $dMonad
  = Handlers.$s$fApplicativeWidgetT
"SPEC/Handlers $fApplicativeWidgetT_$c*> @ Sitio @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Sitio
                                                                                         GHC.Types.IO)
                                                                       $dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c*> @ Foundation.Sitio
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
"SPEC/Handlers $fApplicativeWidgetT_$c<* @ Sitio @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Sitio
                                                                                         GHC.Types.IO)
                                                                       $dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c<* @ Foundation.Sitio
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<*
"SPEC/Handlers $fMonadBasebWidgetT @ IO @ Sitio @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                         GHC.Types.IO
                                                                      $dApplicative1 :: GHC.Base.Applicative
                                                                                          (Yesod.Core.Types.WidgetT
                                                                                             Foundation.Sitio
                                                                                             GHC.Types.IO)
                                                                      $dMonad :: GHC.Base.Monad
                                                                                   GHC.Types.IO
                                                                      $dMonad1 :: GHC.Base.Monad
                                                                                    (Yesod.Core.Types.WidgetT
                                                                                       Foundation.Sitio
                                                                                       GHC.Types.IO)
                                                                      $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                       GHC.Types.IO
                                                                                       GHC.Types.IO
  Yesod.Core.Types.$fMonadBasebWidgetT @ GHC.Types.IO
                                       @ Foundation.Sitio
                                       @ GHC.Types.IO
                                       $dApplicative
                                       $dApplicative1
                                       $dMonad
                                       $dMonad1
                                       $dMonadBase
  = Handlers.$s$fMonadBasebWidgetT
"SPEC/Handlers $fMonadHandlerWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                                                                        (Yesod.Core.Types.WidgetT
                                                                                           Foundation.Sitio
                                                                                           GHC.Types.IO)
                                                                   tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                            GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ Foundation.Sitio
                                                 @ GHC.Types.IO
                                                 $dMonadResource
                                                 tup
  = Handlers.$s$fMonadHandlerWidgetT
"SPEC/Handlers $fMonadIOWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                           (Yesod.Core.Types.WidgetT
                                                                              Foundation.Sitio
                                                                              GHC.Types.IO)
                                                              $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                             GHC.Types.IO
  Yesod.Core.Types.$fMonadIOWidgetT @ Foundation.Sitio
                                    @ GHC.Types.IO
                                    $dMonad
                                    $dMonadIO
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT
"SPEC/Handlers $fMonadResourceWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Sitio
                                                                                         GHC.Types.IO)
                                                                    $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      Foundation.Sitio
                                                                                      GHC.Types.IO)
                                                                    $dApplicative :: GHC.Base.Applicative
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Sitio
                                                                                          GHC.Types.IO)
                                                                    $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                     GHC.Types.IO
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        Foundation.Sitio
                                                                                        GHC.Types.IO)
                                                                    $dApplicative1 :: GHC.Base.Applicative
                                                                                        GHC.Types.IO
                                                                    $dMonadIO1 :: Control.Monad.IO.Class.MonadIO
                                                                                    GHC.Types.IO
                                                                    $dMonadBase1 :: Control.Monad.Base.MonadBase
                                                                                      GHC.Types.IO
                                                                                      GHC.Types.IO
                                                                    $dMonadThrow1 :: Control.Monad.Catch.MonadThrow
                                                                                       GHC.Types.IO
  Yesod.Core.Types.$fMonadResourceWidgetT @ Foundation.Sitio
                                          @ GHC.Types.IO
                                          $dMonadThrow
                                          $dMonadIO
                                          $dApplicative
                                          $dMonadBase
                                          $dApplicative1
                                          $dMonadIO1
                                          $dMonadBase1
                                          $dMonadThrow1
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT
"SPEC/Handlers $fMonadThrowWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                              (Yesod.Core.Types.WidgetT
                                                                                 Foundation.Sitio
                                                                                 GHC.Types.IO)
                                                                 $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                   GHC.Types.IO
  Yesod.Core.Types.$fMonadThrowWidgetT @ Foundation.Sitio
                                       @ GHC.Types.IO
                                       $dMonad
                                       $dMonadThrow
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT
"SPEC/Handlers $fMonadWidgetT @ Sitio @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                               (Yesod.Core.Types.WidgetT
                                                                                  Foundation.Sitio
                                                                                  GHC.Types.IO)
                                                            $dMonad :: GHC.Base.Monad GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT @ Foundation.Sitio
                                  @ GHC.Types.IO
                                  $dApplicative
                                  $dMonad
  = Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT
"SPEC/Handlers $fMonadWidgetT_$creturn @ Sitio @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                        (Yesod.Core.Types.WidgetT
                                                                                           Foundation.Sitio
                                                                                           GHC.Types.IO)
                                                                     $dMonad :: GHC.Base.Monad
                                                                                  GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT_$creturn @ Foundation.Sitio
                                           @ GHC.Types.IO
                                           $dApplicative
                                           $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
"SPEC/Handlers $fMonadWidgetWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Sitio
                                                                                         GHC.Types.IO)
                                                                  tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                           GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadWidgetWidgetT @ Foundation.Sitio
                                                @ GHC.Types.IO
                                                $dMonadHandler
                                                tup
  = Handlers.$s$fMonadWidgetWidgetT
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

